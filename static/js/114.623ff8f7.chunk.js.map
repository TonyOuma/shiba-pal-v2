{"version":3,"sources":["components/map/controls/MapControlFullscreen.tsx","components/map/controls/MapControlGeolocate.tsx","components/map/controls/MapControlMarker.tsx","components/map/controls/MapControlNavigation.tsx","components/map/controls/MapControlPopup.tsx","components/map/controls/MapControlScale.tsx","components/map/map-heatmap/ControlPanel.tsx","components/map/map-heatmap/index.tsx"],"names":["FullscreenControlStyle","styled","FullscreenControl","theme","zIndex","borderRadius","overflow","top","spacing","left","boxShadow","customShadows","z8","transform","MapControlFullscreen","props","GeolocateControlStyle","GeolocateControl","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","IconStyle","height","stroke","cursor","fill","palette","error","main","MapControlMarker","onClick","other","viewBox","d","NavigationControlStyle","NavigationControl","bottom","borderTop","divider","MapControlNavigation","PopupStyle","Popup","isRTL","direction","maxWidth","padding","z20","shape","backgroundColor","grey","width","fontSize","opacity","color","common","white","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","onClose","sx","children","tipSize","anchor","closeButton","closeOnClick","RootStyle","background","position","border","lineHeight","backgroundImage","MapControlScale","unit","minWidth","backdropFilter","WebkitBackdropFilter","alpha","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","Box","display","alignItems","justifyContent","Typography","variant","Switch","size","checked","onChange","event","target","gutterBottom","fDate","Slider","min","step","max","disabled","value","e","handleChangeDays","HEATMAP_LAYER","maxzoom","type","paint","MapHeatmap","useState","useAllDays","timeRange","setTimeRange","selectTime","earthquakes","setEarthQuakes","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","useEffect","fetch","then","resp","json","features","properties","time","length","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","featureDate","filterFeaturesByDay","onViewportChange"],"mappings":"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","file":"static/js/114.623ff8f7.chunk.js","sourcesContent":["import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { FullscreenControl, FullscreenControlProps } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(1.5),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& span.mapboxgl-ctrl-icon': {\n    transform: ' scale(0.75)'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlFullscreen(props: FullscreenControlProps) {\n  return <FullscreenControlStyle {...props} />;\n}\n","import { GeolocateControl } from 'react-map-gl';\nimport { GeolocateControlProps } from 'react-map-gl/src/components/geolocate-control';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlGeolocate({ ...props }: GeolocateControlProps) {\n  return (\n    <GeolocateControlStyle\n      positionOptions={{ enableHighAccuracy: true }}\n      trackUserLocation={true}\n      {...props}\n    />\n  );\n}\n","import { Marker, MarkerProps } from 'react-map-gl';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\n\nconst IconStyle = styled('svg')(({ theme }) => ({\n  height: SIZE,\n  stroke: 'none',\n  cursor: 'pointer',\n  fill: theme.palette.error.main,\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n}));\n\n// ----------------------------------------------------------------------\n\ninterface MapControlMarkerProps extends MarkerProps {\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\n}\n\nexport default function MapControlMarker({ onClick, ...other }: MapControlMarkerProps) {\n  return (\n    <Marker {...other}>\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\n        <path d={ICON} />\n      </IconStyle>\n    </Marker>\n  );\n}\n","import { NavigationControl } from 'react-map-gl';\nimport { NavigationControlProps } from 'react-map-gl/src/components/navigation-control';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  bottom: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& button+button': {\n    borderTop: `1px solid ${theme.palette.divider}`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlNavigation({ ...other }: NavigationControlProps) {\n  return <NavigationControlStyle {...other} />;\n}\n","import { Popup, PopupProps } from 'react-map-gl';\n// material\nimport { SxProps } from '@material-ui/system';\nimport { Theme, experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\n// @ts-ignore\nconst PopupStyle = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800]\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1\n      },\n      '&:focus': {\n        outline: 'none'\n      }\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800]\n    }\n  };\n});\n\ninterface MapControlPopupProps extends PopupProps {\n  sx?: SxProps<Theme>;\n}\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlPopup({ onClose, sx, children, ...other }: MapControlPopupProps) {\n  return (\n    <PopupStyle\n      tipSize={8}\n      anchor=\"bottom\"\n      onClose={onClose}\n      closeButton={true}\n      closeOnClick={false}\n      sx={sx}\n      {...other}\n    >\n      {children}\n    </PopupStyle>\n  );\n}\n","import { ScaleControl } from 'react-map-gl';\nimport { ScaleControlProps } from 'react-map-gl/src/components/scale-control';\n// material\nimport { experimentalStyled as styled, Theme } from '@material-ui/core/styles';\nimport { SxProps } from '@material-ui/system';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  background: 'red',\n  position: 'absolute',\n  left: theme.spacing(1.5),\n  bottom: theme.spacing(3.5),\n  boxShadow: theme.customShadows.z8,\n  '& .mapboxgl-ctrl': {\n    border: 'none',\n    borderRadius: 4,\n    lineHeight: '14px',\n    color: theme.palette.common.white,\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ninterface MapControlScaleProps extends ScaleControlProps {\n  sx?: SxProps<Theme>;\n}\n\nexport default function MapControlScale({ sx, ...other }: MapControlScaleProps) {\n  return (\n    <RootStyle sx={sx}>\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\n    </RootStyle>\n  );\n}\n","// material\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Slider, Switch, Typography } from '@material-ui/core';\n// utils\nimport { fDate } from '../../../utils/formatTime';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  minWidth: 240,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  backdropFilter: 'blur(8px)',\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.grey[900], 0.72)\n}));\n\n// ----------------------------------------------------------------------\n\ntype ControlPanelProps = {\n  startTime: number;\n  endTime: number;\n  allDays: boolean;\n  selectedTime: number;\n  onChangeTime: (value: number) => void;\n  onChangeAllDays: (value: boolean) => void;\n};\n\nexport default function ControlPanel({\n  startTime,\n  endTime,\n  allDays,\n  selectedTime,\n  onChangeTime,\n  onChangeAllDays\n}: ControlPanelProps) {\n  const day = 24 * 60 * 60 * 1000;\n  const days = Math.round((endTime - startTime) / day);\n  const selectedDay = Math.round((selectedTime - startTime) / day);\n\n  const handleChangeDays = (value: number) => {\n    const daysToAdd = value;\n    const newTime = startTime + daysToAdd * day;\n    onChangeTime(newTime);\n  };\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n          All Days\n        </Typography>\n        <Switch\n          size=\"small\"\n          checked={allDays}\n          onChange={(event) => onChangeAllDays(event.target.checked)}\n        />\n      </Box>\n      <br />\n      <Typography\n        gutterBottom\n        variant=\"body2\"\n        sx={{ color: allDays ? 'text.disabled' : 'common.white' }}\n      >\n        Each Day: {fDate(selectedTime)}\n      </Typography>\n      <Slider\n        min={1}\n        step={1}\n        max={days}\n        disabled={allDays}\n        value={selectedDay}\n        onChange={(e, value) => {\n          if (typeof value === 'number') handleChangeDays(value);\n        }}\n      />\n    </RootStyle>\n  );\n}\n","import MapGL, { Source, Layer, LayerProps } from 'react-map-gl';\nimport { useEffect, useState, useMemo } from 'react';\n//\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen\n} from '../controls';\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nconst HEATMAP_LAYER: LayerProps = {\n  maxzoom: 9,\n  type: 'heatmap',\n  paint: {\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n    'heatmap-color': [\n      'interpolate',\n      ['linear'],\n      ['heatmap-density'],\n      0,\n      'rgba(33,102,172,0)',\n      0.2,\n      'rgb(103,169,207)',\n      0.4,\n      'rgb(209,229,240)',\n      0.6,\n      'rgb(253,219,199)',\n      0.8,\n      'rgb(239,138,98)',\n      0.9,\n      'rgb(255,201,101)'\n    ],\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n  }\n};\n\n// ----------------------------------------------------------------------\n\nfunction filterFeaturesByDay(featureCollection: { features: any[] } | undefined, time: number) {\n  const date = new Date(time);\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n  const features = featureCollection?.features.filter((feature) => {\n    const featureDate = new Date(feature.properties.time);\n    return (\n      featureDate.getFullYear() === year &&\n      featureDate.getMonth() === month &&\n      featureDate.getDate() === day\n    );\n  });\n  return { type: 'FeatureCollection', features };\n}\n\nexport default function MapHeatmap({ ...other }) {\n  const [allDays, useAllDays] = useState(true);\n  const [timeRange, setTimeRange] = useState([0, 0]);\n  const [selectedTime, selectTime] = useState(0);\n  const [earthquakes, setEarthQuakes] = useState();\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -100,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0\n  });\n\n  useEffect(() => {\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\n      .then((resp) => resp.json())\n      .then((json) => {\n        const { features } = json;\n        const endTime = features[0].properties.time;\n        const startTime = features[features.length - 1].properties.time;\n\n        setTimeRange([startTime, endTime]);\n        setEarthQuakes(json);\n        selectTime(endTime);\n      });\n  }, []);\n\n  const data: any = useMemo(\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\n    [earthquakes, allDays, selectedTime]\n  );\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        {data && (\n          <Source type=\"geojson\" data={data}>\n            <Layer {...HEATMAP_LAYER} />\n          </Source>\n        )}\n      </MapGL>\n\n      <ControlPanel\n        startTime={timeRange[0]}\n        endTime={timeRange[1]}\n        allDays={allDays}\n        selectedTime={selectedTime}\n        onChangeTime={selectTime}\n        onChangeAllDays={useAllDays}\n      />\n    </>\n  );\n}\n"],"sourceRoot":""}