{"version":3,"sources":["components/map/controls/MapControlFullscreen.tsx","components/map/controls/MapControlGeolocate.tsx","components/map/controls/MapControlMarker.tsx","components/map/controls/MapControlNavigation.tsx","components/map/controls/MapControlPopup.tsx","components/map/controls/MapControlScale.tsx","components/map/map-change-theme/ControlPanel.tsx","components/map/map-change-theme/index.tsx"],"names":["FullscreenControlStyle","styled","FullscreenControl","theme","zIndex","borderRadius","overflow","top","spacing","left","boxShadow","customShadows","z8","transform","MapControlFullscreen","props","GeolocateControlStyle","GeolocateControl","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","IconStyle","height","stroke","cursor","fill","palette","error","main","MapControlMarker","onClick","other","viewBox","d","NavigationControlStyle","NavigationControl","bottom","borderTop","divider","MapControlNavigation","PopupStyle","Popup","isRTL","direction","maxWidth","padding","z20","shape","backgroundColor","grey","width","fontSize","opacity","color","common","white","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","onClose","sx","children","tipSize","anchor","closeButton","closeOnClick","RootStyle","background","position","border","lineHeight","backgroundImage","MapControlScale","unit","minWidth","backdropFilter","WebkitBackdropFilter","alpha","ControlPanel","themes","selectTheme","onChangeTheme","Typography","gutterBottom","variant","RadioGroup","value","onChange","e","Object","keys","map","item","FormControlLabel","control","Radio","size","label","textTransform","MapChangeTheme","useState","setSelectTheme","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","handleChangeTheme","useCallback","onViewportChange","mapStyle"],"mappings":"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","file":"static/js/111.8312ae37.chunk.js","sourcesContent":["import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { FullscreenControl, FullscreenControlProps } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(1.5),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& span.mapboxgl-ctrl-icon': {\n    transform: ' scale(0.75)'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlFullscreen(props: FullscreenControlProps) {\n  return <FullscreenControlStyle {...props} />;\n}\n","import { GeolocateControl } from 'react-map-gl';\nimport { GeolocateControlProps } from 'react-map-gl/src/components/geolocate-control';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlGeolocate({ ...props }: GeolocateControlProps) {\n  return (\n    <GeolocateControlStyle\n      positionOptions={{ enableHighAccuracy: true }}\n      trackUserLocation={true}\n      {...props}\n    />\n  );\n}\n","import { Marker, MarkerProps } from 'react-map-gl';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\n\nconst IconStyle = styled('svg')(({ theme }) => ({\n  height: SIZE,\n  stroke: 'none',\n  cursor: 'pointer',\n  fill: theme.palette.error.main,\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n}));\n\n// ----------------------------------------------------------------------\n\ninterface MapControlMarkerProps extends MarkerProps {\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\n}\n\nexport default function MapControlMarker({ onClick, ...other }: MapControlMarkerProps) {\n  return (\n    <Marker {...other}>\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\n        <path d={ICON} />\n      </IconStyle>\n    </Marker>\n  );\n}\n","import { NavigationControl } from 'react-map-gl';\nimport { NavigationControlProps } from 'react-map-gl/src/components/navigation-control';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  bottom: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& button+button': {\n    borderTop: `1px solid ${theme.palette.divider}`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlNavigation({ ...other }: NavigationControlProps) {\n  return <NavigationControlStyle {...other} />;\n}\n","import { Popup, PopupProps } from 'react-map-gl';\n// material\nimport { SxProps } from '@material-ui/system';\nimport { Theme, experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\n// @ts-ignore\nconst PopupStyle = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800]\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1\n      },\n      '&:focus': {\n        outline: 'none'\n      }\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800]\n    }\n  };\n});\n\ninterface MapControlPopupProps extends PopupProps {\n  sx?: SxProps<Theme>;\n}\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlPopup({ onClose, sx, children, ...other }: MapControlPopupProps) {\n  return (\n    <PopupStyle\n      tipSize={8}\n      anchor=\"bottom\"\n      onClose={onClose}\n      closeButton={true}\n      closeOnClick={false}\n      sx={sx}\n      {...other}\n    >\n      {children}\n    </PopupStyle>\n  );\n}\n","import { ScaleControl } from 'react-map-gl';\nimport { ScaleControlProps } from 'react-map-gl/src/components/scale-control';\n// material\nimport { experimentalStyled as styled, Theme } from '@material-ui/core/styles';\nimport { SxProps } from '@material-ui/system';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  background: 'red',\n  position: 'absolute',\n  left: theme.spacing(1.5),\n  bottom: theme.spacing(3.5),\n  boxShadow: theme.customShadows.z8,\n  '& .mapboxgl-ctrl': {\n    border: 'none',\n    borderRadius: 4,\n    lineHeight: '14px',\n    color: theme.palette.common.white,\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ninterface MapControlScaleProps extends ScaleControlProps {\n  sx?: SxProps<Theme>;\n}\n\nexport default function MapControlScale({ sx, ...other }: MapControlScaleProps) {\n  return (\n    <RootStyle sx={sx}>\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\n    </RootStyle>\n  );\n}\n","import { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Radio, Typography, RadioGroup, FormControlLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  backdropFilter: 'blur(8px)',\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.grey[900], 0.72)\n}));\n\n// ----------------------------------------------------------------------\n\ntype ControlPanelProps = {\n  themes: Record<string, string>;\n  selectTheme: string;\n  onChangeTheme: (theme: string) => void;\n};\n\nexport default function ControlPanel({ themes, selectTheme, onChangeTheme }: ControlPanelProps) {\n  return (\n    <RootStyle>\n      <Typography gutterBottom variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n        Select Theme:\n      </Typography>\n      <RadioGroup value={selectTheme} onChange={(e, value) => onChangeTheme(value)}>\n        {Object.keys(themes).map((item) => (\n          <FormControlLabel\n            key={item}\n            value={item}\n            control={<Radio size=\"small\" />}\n            label={item}\n            sx={{ color: 'common.white', textTransform: 'capitalize' }}\n          />\n        ))}\n      </RadioGroup>\n    </RootStyle>\n  );\n}\n","import ReactMapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\nimport { InteractiveMapProps } from 'react-map-gl/src/components/interactive-map';\n//\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen\n} from '../controls';\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\ninterface MapChangeThemeProps extends InteractiveMapProps {\n  themes: Record<string, string>;\n}\n\nexport default function MapChangeTheme({ themes, ...other }: MapChangeThemeProps) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n\n  const handleChangeTheme = useCallback((value: string) => setSelectTheme(value), []);\n\n  return (\n    <>\n      <ReactMapGL\n        {...viewport}\n        onViewportChange={setViewport}\n        mapStyle={themes?.[selectTheme]}\n        {...other}\n      >\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </ReactMapGL>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n"],"sourceRoot":""}