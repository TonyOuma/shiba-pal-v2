{"version":3,"sources":["../node_modules/@iconify/icons-eva/plus-fill.js","../node_modules/@iconify/icons-eva/shield-fill.js","components/_external-pages/payment/PaymentBillingAddress.tsx","components/_external-pages/payment/PaymentNewCardForm.tsx","components/_external-pages/payment/PaymentMethods.tsx","components/_external-pages/payment/PaymentSummary.tsx","pages/Payment.tsx"],"names":["exports","__esModule","default","RootStyle","styled","theme","padding","spacing","breakpoints","up","paddingTop","paddingLeft","PaymentBillingAddress","formik","touched","errors","getFieldProps","Typography","variant","Stack","mt","TextField","fullWidth","label","error","Boolean","name","helperText","phone","email","address","PaymentNewCardForm","onCancel","useState","isOpen","setIsOpen","values","resetForm","Paper","sx","p","mb","bgcolor","size","direction","xs","sm","InputProps","endAdornment","InputAdornment","position","edge","onClick","e","currentTarget","icon","infoFill","Button","id","type","newCardName","newCardNumber","newCardExpired","newCardCvv","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","maxWidth","align","PAYMENT_OPTIONS","value","title","icons","CARD_OPTIONS","OptionStyle","display","alignItems","justifyContent","paddingRight","transition","transitions","create","border","palette","grey","PaymentMethods","show","setShow","handleCollapseIn","prev","handleCollapseOut","RadioGroup","map","method","hasChildren","boxShadow","customShadows","z8","flexWrap","FormControlLabel","control","Radio","checkedIcon","checkmarkCircle2Fill","ml","py","mx","width","alt","src","Collapse","in","select","SelectProps","native","option","startIcon","plusFill","height","my","margin","paddingBottom","borderRadius","shape","borderRadiusMd","backgroundColor","background","neutral","PaymentSummary","isSubmitting","component","color","Label","Switch","alignSelf","Divider","borderStyle","LoadingButton","loading","Box","Icon","shieldFill","Page","minHeight","Payment","enqueueSnackbar","useSnackbar","useTheme","upMd","useMediaQuery","PaymentSchema","Yup","required","useFormik","initialValues","subscription","isMonthly","card","validationSchema","onSubmit","a","submitData","fakeRequest","alert","JSON","stringify","Container","paragraph","Card","noValidate","autoComplete","handleSubmit","Grid","container","item","md"],"mappings":"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","file":"static/js/104.e5c2cfeb.chunk.js","sourcesContent":["var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M12 21.85a2 2 0 0 1-1-.25l-.3-.17A15.17 15.17 0 0 1 3 8.23v-.14a2 2 0 0 1 1-1.75l7-3.94a2 2 0 0 1 2 0l7 3.94a2 2 0 0 1 1 1.75v.14a15.17 15.17 0 0 1-7.72 13.2l-.3.17a2 2 0 0 1-.98.25z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Typography, TextField, Stack } from '@material-ui/core';\n// @types\nimport { PaymentFormikProps } from '../../../@types/payment';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  padding: theme.spacing(3),\n  [theme.breakpoints.up('md')]: {\n    padding: 0,\n    paddingTop: theme.spacing(5),\n    paddingLeft: theme.spacing(5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ntype PaymentBillingAddressProps = {\n  formik: PaymentFormikProps;\n};\n\nexport default function PaymentBillingAddress({ formik }: PaymentBillingAddressProps) {\n  const { touched, errors, getFieldProps } = formik;\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle1\">Billing Address</Typography>\n\n      <Stack spacing={3} mt={5}>\n        <TextField\n          fullWidth\n          label=\"Person name\"\n          {...getFieldProps('name')}\n          error={Boolean(touched.name && errors.name)}\n          helperText={touched.name && errors.name}\n        />\n\n        <TextField\n          fullWidth\n          label=\"Phone number\"\n          {...getFieldProps('phone')}\n          error={Boolean(touched.phone && errors.phone)}\n          helperText={touched.phone && errors.phone}\n        />\n\n        <TextField\n          fullWidth\n          label=\"Email\"\n          {...getFieldProps('email')}\n          error={Boolean(touched.email && errors.email)}\n          helperText={touched.email && errors.email}\n        />\n\n        <TextField\n          fullWidth\n          label=\"Address\"\n          {...getFieldProps('address')}\n          error={Boolean(touched.address && errors.address)}\n          helperText={touched.address && errors.address}\n        />\n      </Stack>\n    </RootStyle>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport infoFill from '@iconify/icons-eva/info-fill';\n// material\nimport {\n  Paper,\n  Stack,\n  Button,\n  Popover,\n  TextField,\n  Typography,\n  InputAdornment\n} from '@material-ui/core';\n// @types\nimport { PaymentFormikProps } from '../../../@types/payment';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\ntype PaymentNewCardFormProps = {\n  formik: PaymentFormikProps;\n  onCancel: VoidFunction;\n};\n\nexport default function PaymentNewCardForm({ formik, onCancel }: PaymentNewCardFormProps) {\n  const [isOpen, setIsOpen] = useState<HTMLButtonElement | null>(null);\n  const { values, resetForm, getFieldProps } = formik;\n\n  const handleCancel = () => {\n    onCancel();\n    resetForm({\n      values: {\n        ...values,\n        newCardName: '',\n        newCardNumber: '',\n        newCardExpired: '',\n        newCardCvv: ''\n      }\n    });\n  };\n\n  return (\n    <>\n      <Paper\n        sx={{\n          p: 2.5,\n          mb: 2.5,\n          bgcolor: 'background.neutral'\n        }}\n      >\n        <Stack spacing={2}>\n          <Typography variant=\"subtitle1\">Add new card</Typography>\n          <TextField\n            fullWidth\n            size=\"small\"\n            label=\"Name on card\"\n            {...getFieldProps('newCardName')}\n          />\n\n          <TextField\n            fullWidth\n            size=\"small\"\n            label=\"Card number\"\n            {...getFieldProps('newCardNumber')}\n          />\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField size=\"small\" label=\"MM/YY\" {...getFieldProps('newCardExpired')} />\n            <TextField\n              size=\"small\"\n              label=\"CVV\"\n              {...getFieldProps('newCardCvv')}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <MIconButton\n                      size=\"small\"\n                      edge=\"end\"\n                      onClick={(e) => setIsOpen(e.currentTarget)}\n                    >\n                      <Icon icon={infoFill} />\n                    </MIconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          </Stack>\n\n          <Stack direction=\"row\" spacing={2}>\n            <Button id=\"cancel\" type=\"button\" fullWidth onClick={handleCancel}>\n              Cancel\n            </Button>\n\n            <Button id=\"create\" type=\"button\" fullWidth variant=\"contained\">\n              Create\n            </Button>\n          </Stack>\n        </Stack>\n      </Paper>\n\n      <Popover\n        open={Boolean(isOpen)}\n        anchorEl={isOpen}\n        onClose={() => setIsOpen(null)}\n        anchorOrigin={{ vertical: 'center', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'center', horizontal: 'center' }}\n        PaperProps={{\n          sx: {\n            p: 1,\n            maxWidth: 200\n          }\n        }}\n      >\n        <Typography variant=\"body2\" align=\"center\">\n          Three-digit number on the back of your VISA card\n        </Typography>\n      </Popover>\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport checkmarkCircle2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Stack,\n  Paper,\n  Radio,\n  Button,\n  Collapse,\n  TextField,\n  Typography,\n  RadioGroup,\n  FormControlLabel\n} from '@material-ui/core';\n// @types\nimport { PaymentFormikProps } from '../../../@types/payment';\n//\nimport { MHidden } from '../../@material-extend';\nimport PaymentNewCardForm from './PaymentNewCardForm';\n\n// ----------------------------------------------------------------------\n\nconst PAYMENT_OPTIONS = [\n  {\n    value: 'paypal',\n    title: 'Pay with Paypal',\n    icons: ['/static/icons/ic_paypal.svg']\n  },\n  {\n    value: 'credit_card',\n    title: 'Credit / Debit Card',\n    icons: ['/static/icons/ic_mastercard.svg', '/static/icons/ic_visa.svg']\n  }\n];\nconst CARD_OPTIONS = [\n  {\n    value: 'visa1',\n    label: '**** **** **** 1212 - Jimmy Holland'\n  },\n  {\n    value: 'visa2',\n    label: '**** **** **** 2424 - Shawn Stokes'\n  },\n  {\n    value: 'mastercard',\n    label: '**** **** **** 4545 - Cole Armstrong'\n  }\n];\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  padding: theme.spacing(3),\n  [theme.breakpoints.up('md')]: {\n    padding: 0,\n    paddingTop: theme.spacing(5)\n  }\n}));\n\nconst OptionStyle = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingLeft: theme.spacing(2.5),\n  paddingRight: theme.spacing(2),\n  transition: theme.transitions.create('all'),\n  border: `solid 1px ${theme.palette.grey[500_32]}`\n}));\n\n// ----------------------------------------------------------------------\n\ntype PaymentMethodsProps = {\n  formik: PaymentFormikProps;\n};\n\nexport default function PaymentMethods({ formik }: PaymentMethodsProps) {\n  const [show, setShow] = useState(false);\n  const { values, getFieldProps } = formik;\n\n  const handleCollapseIn = () => {\n    setShow((prev) => !prev);\n  };\n\n  const handleCollapseOut = () => {\n    setShow(false);\n  };\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle1\" sx={{ mb: 5 }}>\n        Payment Method\n      </Typography>\n\n      <RadioGroup {...getFieldProps('method')}>\n        <Stack spacing={3}>\n          {PAYMENT_OPTIONS.map((method) => {\n            const { value, title, icons } = method;\n            const hasChildren = value === 'credit_card';\n\n            return (\n              <OptionStyle\n                key={title}\n                sx={{\n                  ...(values.method === value && {\n                    boxShadow: (theme) => theme.customShadows.z8\n                  }),\n                  ...(hasChildren && { flexWrap: 'wrap' })\n                }}\n              >\n                <FormControlLabel\n                  value={value}\n                  control={<Radio checkedIcon={<Icon icon={checkmarkCircle2Fill} />} />}\n                  label={\n                    <Typography variant=\"subtitle2\" sx={{ ml: 1 }}>\n                      {title}\n                    </Typography>\n                  }\n                  sx={{ py: 3, mx: 0 }}\n                />\n\n                <MHidden width=\"smDown\">\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                    {icons.map((icon) => (\n                      <img key={icon} alt=\"logo card\" src={icon} />\n                    ))}\n                  </Stack>\n                </MHidden>\n\n                {hasChildren && (\n                  <Collapse in={values.method === 'credit_card'} sx={{ width: 1 }}>\n                    <TextField\n                      select\n                      fullWidth\n                      label=\"Card\"\n                      {...getFieldProps('card')}\n                      SelectProps={{ native: true }}\n                    >\n                      {CARD_OPTIONS.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n\n                    <Button\n                      id=\"addNewCard\"\n                      type=\"button\"\n                      size=\"small\"\n                      startIcon={<Icon icon={plusFill} width={20} height={20} />}\n                      onClick={handleCollapseIn}\n                      sx={{ my: 3 }}\n                    >\n                      Add new card\n                    </Button>\n\n                    <Collapse in={show}>\n                      <PaymentNewCardForm formik={formik} onCancel={handleCollapseOut} />\n                    </Collapse>\n                  </Collapse>\n                )}\n              </OptionStyle>\n            );\n          })}\n        </Stack>\n      </RadioGroup>\n    </RootStyle>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport shieldFill from '@iconify/icons-eva/shield-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Switch, Divider, Typography, Stack } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// @types\nimport { PaymentFormikProps } from '../../../@types/payment';\n//\nimport Label from '../../Label';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  padding: theme.spacing(3),\n  [theme.breakpoints.up('md')]: {\n    margin: theme.spacing(1),\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    borderRadius: theme.shape.borderRadiusMd,\n    backgroundColor: theme.palette.background.neutral\n  },\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ntype PaymentSummaryProps = {\n  formik: PaymentFormikProps;\n};\n\nexport default function PaymentSummary({ formik }: PaymentSummaryProps) {\n  const { getFieldProps, isSubmitting } = formik;\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle1\" sx={{ mb: 5 }}>\n        Summary\n      </Typography>\n\n      <Stack spacing={2.5}>\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n          <Typography variant=\"subtitle2\" component=\"p\" sx={{ color: 'text.secondary' }}>\n            Subscription\n          </Typography>\n          <Label color=\"error\" variant=\"filled\">\n            PREMIUM\n          </Label>\n        </Stack>\n\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n          <Typography component=\"p\" variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n            Billed Monthly\n          </Typography>\n          <Switch {...getFieldProps('isMonthly')} />\n        </Stack>\n\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'text.secondary' }}>$</Typography>\n          <Typography variant=\"h2\" sx={{ mx: 1 }}>\n            9.99\n          </Typography>\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            sx={{ mb: 1, alignSelf: 'flex-end', color: 'text.secondary' }}\n          >\n            /mo\n          </Typography>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h6\" component=\"p\">\n            Total Billed\n          </Typography>\n          <Typography variant=\"h6\" component=\"p\">\n            $9.99*\n          </Typography>\n        </Stack>\n\n        <Divider sx={{ borderStyle: 'dashed', mb: 1 }} />\n      </Stack>\n\n      <Typography variant=\"caption\" sx={{ color: 'text.secondary', mt: 1 }}>\n        * Plus applicable taxes\n      </Typography>\n\n      <LoadingButton\n        fullWidth\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        sx={{ mt: 5, mb: 3 }}\n      >\n        Upgrade My Plan\n      </LoadingButton>\n\n      <Stack alignItems=\"center\" spacing={1}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1.5}>\n          <Box\n            component={Icon}\n            icon={shieldFill}\n            sx={{ width: 20, height: 20, color: 'primary.main' }}\n          />\n          <Typography variant=\"subtitle2\">Secure credit card payment</Typography>\n        </Stack>\n        <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n          This is a secure 128-bit SSL encrypted payment\n        </Typography>\n      </Stack>\n    </RootStyle>\n  );\n}\n","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Card, Grid, Container, Typography, useMediaQuery } from '@material-ui/core';\n// @types\nimport { InitialValues } from '../@types/payment';\n// utils\nimport fakeRequest from '../utils/fakeRequest';\n// components\nimport Page from '../components/Page';\nimport {\n  PaymentSummary,\n  PaymentMethods,\n  PaymentBillingAddress\n} from '../components/_external-pages/payment';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  minHeight: '100%',\n  paddingTop: theme.spacing(15),\n  paddingBottom: theme.spacing(10)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Payment() {\n  const { enqueueSnackbar } = useSnackbar();\n  const theme = useTheme();\n  const upMd = useMediaQuery(theme.breakpoints.up('md'));\n\n  const PaymentSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    phone: Yup.string().required('Phone is required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    address: Yup.string().required('Address is required')\n  });\n\n  const formik = useFormik<InitialValues>({\n    initialValues: {\n      name: '',\n      phone: '',\n      email: '',\n      address: '',\n      subscription: 'premium',\n      isMonthly: false,\n      method: 'paypal',\n      card: 'mastercard',\n      newCardName: '',\n      newCardNumber: '',\n      newCardExpired: '',\n      newCardCvv: ''\n    },\n    validationSchema: PaymentSchema,\n    onSubmit: async (values, { resetForm }) => {\n      const submitData = {\n        name: values.name,\n        phone: values.phone,\n        email: values.email,\n        address: values.address,\n        subscription: 'premium'\n      };\n      await fakeRequest(500);\n      if (values.method === 'paypal') {\n        alert(\n          JSON.stringify(\n            {\n              ...submitData,\n              method: values.method\n            },\n            null,\n            2\n          )\n        );\n      } else if (values.method !== 'paypal' && !values.newCardName) {\n        alert(\n          JSON.stringify(\n            {\n              ...submitData,\n              method: values.method,\n              card: values.card\n            },\n            null,\n            2\n          )\n        );\n      }\n      if (values.newCardName) {\n        alert(\n          JSON.stringify(\n            {\n              ...submitData,\n              method: values.method,\n              newCardName: values.newCardName,\n              newCardNumber: values.newCardNumber,\n              newCardExpired: values.newCardExpired,\n              newCardCvv: values.newCardCvv\n            },\n            null,\n            2\n          )\n        );\n      }\n      resetForm();\n      enqueueSnackbar('Payment success', { variant: 'success' });\n    }\n  });\n\n  return (\n    <RootStyle title=\"Payment | Minimal-UI\">\n      <Container maxWidth=\"lg\">\n        <Box sx={{ mb: 5 }}>\n          <Typography variant=\"h3\" align=\"center\" paragraph>\n            Let's finish powering you up!\n          </Typography>\n          <Typography align=\"center\" sx={{ color: 'text.secondary' }}>\n            Professional plan is right for you.\n          </Typography>\n        </Box>\n\n        <Card>\n          <FormikProvider value={formik}>\n            <Form noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n              <Grid container spacing={upMd ? 5 : 2}>\n                <Grid item xs={12} md={4}>\n                  <PaymentBillingAddress formik={formik} />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <PaymentMethods formik={formik} />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <PaymentSummary formik={formik} />\n                </Grid>\n              </Grid>\n            </Form>\n          </FormikProvider>\n        </Card>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}