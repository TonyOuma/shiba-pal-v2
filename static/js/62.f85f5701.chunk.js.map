{"version":3,"sources":["components/HeaderBreadcrumbs.tsx","components/SearchNotFound.tsx","components/LightboxModal.tsx","components/EmojiPicker.tsx","utils/getFileFormat.tsx","components/_dashboard/chat/ChatAccount.tsx","components/_dashboard/chat/ChatContactSearch.tsx","components/_dashboard/chat/ChatConversationItem.tsx","components/_dashboard/chat/ChatConversationList.tsx","components/_dashboard/chat/ChatHeaderCompose.tsx","components/_dashboard/chat/ChatHeaderDetail.tsx","components/_dashboard/chat/ChatMessageInput.tsx","components/_dashboard/chat/ChatMessageItem.tsx","components/_dashboard/chat/ChatMessageList.tsx","components/_dashboard/chat/ChatRoomAttachment.tsx","components/_dashboard/chat/ChatRoomOneParticipant.tsx","components/_dashboard/chat/ChatRoomPopup.tsx","components/_dashboard/chat/ChatRoomGroupParticipant.tsx","components/_dashboard/chat/ChatRoom.tsx","components/_dashboard/chat/ChatSearchResults.tsx","components/_dashboard/chat/ChatSidebar.tsx","components/_dashboard/chat/ChatWindow.tsx","pages/dashboard/Chat.tsx"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","SearchNotFound","searchQuery","align","useStyles","makeStyles","theme","isRTL","direction","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","alpha","palette","grey","backgroundImage","root","backdropFilter","height","padding","spacing","width","justifyContent","marginLeft","borderRadius","shape","outline","borderRadiusSm","left","right","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","classes","useEffect","document","body","style","overflow","toolbarButtons","length","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","wrapperClassName","RootStyle","styled","Box","position","PickerStyle","bottom","boxShadow","customShadows","z20","borderRadiusMd","border","background","paper","color","text","disabled","primary","borderColor","divider","typography","body2","opacity","fill","subtitle2","WebkitBackdropFilter","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useTheme","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","size","onClick","e","preventDefault","icon","smilingFaceFill","ICON_SIZE","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getFileThumb","thumb","format","includes","getFileFormat","src","alt","fileTypeVideo","fileTypeWord","fileTypeExcel","fileTypePowerpoint","fileTypePdf","fileTypePhotoshop2","fileTypeAi2","fileFill","STATUS","ChatAccount","user","useAuth","open","setOpen","status","setStatus","MyAvatar","event","currentTarget","cursor","BadgeStatus","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","py","pr","pl","ml","mr","Typography","displayName","email","Tooltip","IconButton","roundPowerSettingsNew","Divider","List","ListItem","disableGutters","px","ListItemIcon","ListItemText","Select","fullWidth","disableUnderline","onChange","bgcolor","option","capitalCase","button","roundAccountBox","primaryTypographyProps","settings2Fill","marginTop","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","z8","borderWidth","ChatContactSearch","query","onFocus","ClickAwayListener","FormControl","placeholder","startAdornment","InputAdornment","component","Icon","searchFill","AvatarWrapperStyle","ChatConversationItem","isSelected","conversation","onSelectConversation","isOpenSidebar","details","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","name","join","displayText","lastMessage","messages","sender","senderId","message","contentType","getDetails","displayLastActivity","last","createdAt","isGroup","isUnread","unreadCount","isOnlineGroup","item","ListItemAvatar","top","slice","className","Avatar","avatar","secondaryTypographyProps","flexDirection","fontSize","lineHeight","whiteSpace","formatDistanceToNowStrict","Date","addSuffix","ChatConversationList","conversations","activeConversationId","navigate","useNavigate","disablePadding","allIds","conversationId","byId","conversationKey","type","otherParticipant","find","username","PATH_DASHBOARD","chat","handleSelectConversation","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipients","setQuery","Autocomplete","multiple","disablePortal","popupIcon","noOptionsText","handleAddRecipient","onInputChange","options","getOptionLabel","recipient","renderOption","props","inputValue","matches","match","parts","parse","checkmarkFill","part","index","highlight","renderTags","getTagProps","label","renderInput","params","TextField","minHeight","OneAvatar","undefined","fToNow","lastActivity","GroupAvatar","AvatarGroup","max","Link","underline","arrowIosForwardFill","ChatHeaderDetail","phoneFill","videoFill","moreVerticalFill","paddingLeft","ChatMessageInput","onSend","fileInputRef","useRef","setMessage","handleAttach","current","click","handleSend","messageId","faker","datatype","uuid","attachments","Input","onKeyUp","key","keyCode","endAdornment","mx","roundAddPhotoAlternate","attach2Fill","micFill","orientation","flexItem","roundSend","ref","marginBottom","ContentStyle","maxWidth","neutral","InfoStyle","MessageImgStyle","objectFit","ChatMessageItem","onOpenLightbox","senderDetails","isMe","isImage","firstName","ChatMessageList","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","scrollTop","scrollHeight","handleOpenLightbox","url","findIndex","Scrollbar","scrollableNodeProps","p","paddingBottom","FileItemStyle","FileThumbStyle","CollapseButtonStyle","Button","overline","AttachmentItem","file","fDateTime","ChatRoomAttachment","isCollapse","onCollapse","totalAttachment","uniq","flatten","endIcon","arrowIosDownwardFill","Collapse","in","RowStyle","margin","RowIconStyle","marginRight","RowTextStyle","wordWrap","ChatRoomOneParticipant","pt","pb","textAlign","pinFill","address","phone","emailFill","IconStyle","ChatRoomPopup","DialogContent","paragraph","Participant","onClosePopup","onShowPopup","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","borderLeft","ToggleButtonStyle","borderRight","borderTopLeftRadius","borderBottomLeftRadius","ChatRoom","isMobile","useMediaQuery","breakpoints","down","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","arrowIosBackFill","participantId","prev","ChatSearchResults","results","onSelectContact","isFound","result","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","useSelector","state","handleChangeSearch","a","axios","get","response","data","console","error","handleSearchSelect","to","new","RouterLink","editFill","ChatWindow","dispatch","useDispatch","pathname","useLocation","useParams","conversationSelector","mode","displayParticipants","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","Chat","getConversations","getContacts","Page","Container","Card"],"mappings":"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","file":"static/js/62.f85f5701.chunk.js","sourcesContent":["import { ReactNode } from 'react';\nimport { isString } from 'lodash';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\nimport { MBreadcrumbsProps } from './@material-extend/MBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface HeaderBreadcrumbsProps extends MBreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: HeaderBreadcrumbsProps) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { Paper, PaperProps, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\ninterface SearchNotFoundProps extends PaperProps {\n  searchQuery?: string;\n}\n\nexport default function SearchNotFound({ searchQuery = '', ...other }: SearchNotFoundProps) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","import { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// material\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => {\n  const isRTL = theme.direction === 'rtl';\n\n  const backgroundIcon = (iconName: string) => ({\n    backgroundSize: '24px 24px',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\n  });\n\n  return {\n    root: {\n      backdropFilter: 'blur(8px)',\n      backgroundColor: alpha(theme.palette.grey[900], 0.88),\n\n      // Toolbar\n      '& .ril__toolbar': {\n        height: 'auto !important',\n        padding: theme.spacing(2, 3),\n        backgroundColor: 'transparent'\n      },\n      '& .ril__toolbarLeftSide': { display: 'none' },\n      '& .ril__toolbarRightSide': {\n        height: 'auto !important',\n        padding: 0,\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        '& li': {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        '& li:first-child': {\n          flexGrow: 1\n        },\n        '& li:not(:first-child)': {\n          width: theme.spacing(5),\n          height: theme.spacing(5),\n          justifyContent: 'center',\n          marginLeft: theme.spacing(1),\n          borderRadius: theme.shape.borderRadius\n        }\n      },\n\n      // Button\n      '& button:focus': { outline: 'none' },\n      '& .ril__toolbarRightSide button': {\n        width: '100%',\n        height: '100%',\n        '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\n        '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\n        '&.ril__closeButton': backgroundIcon('close')\n      },\n      '& .ril__navButtons': {\n        padding: theme.spacing(3),\n        borderRadius: theme.shape.borderRadiusSm,\n        '&.ril__navButtonPrev': {\n          left: theme.spacing(2),\n          right: 'auto',\n          ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\n        },\n        '&.ril__navButtonNext': {\n          right: theme.spacing(2),\n          left: 'auto',\n          ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\n        }\n      }\n    }\n  };\n});\n\n// ----------------------------------------------------------------------\n\ninterface ModalLighboxProps {\n  images: string[];\n  photoIndex: number;\n  setPhotoIndex: (index: number) => void;\n  isOpen: boolean;\n  onClose: VoidFunction;\n}\n\nfunction LightboxModal({\n  images,\n  photoIndex,\n  setPhotoIndex,\n  isOpen,\n  onClose,\n  ...other\n}: ModalLighboxProps) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = (\n    <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>\n  );\n\n  const toolbarButtons = [showIndex];\n  const customStyles = {\n    overlay: {\n      zIndex: 9999\n    }\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <Lightbox\n          mainSrc={images[photoIndex]}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={onClose}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          wrapperClassName={classes.root}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n\nexport default LightboxModal;\n","import 'emoji-mart/css/emoji-mart.css';\nimport { BaseEmoji, Picker } from 'emoji-mart';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\n// material\nimport { alpha, useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, IconButton, ClickAwayListener, BoxProps } from '@material-ui/core';\n// theme\nimport typography from '../theme/typography';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)({\n  position: 'relative'\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: theme.shape.borderRadiusMd,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary\n    }\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...typography.body2,\n      color: theme.palette.text.disabled\n    }\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled\n  },\n  '& .emoji-mart-category-label span': {\n    ...typography.subtitle2,\n    backdropFilter: 'blur(8px)',\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n    color: theme.palette.text.primary,\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ninterface EmoijPickerProps extends BoxProps {\n  disabled?: boolean;\n  value: string;\n  setValue: (value: string) => void;\n  alignRight?: boolean;\n}\n\nexport default function EmojiPicker({\n  disabled,\n  value,\n  setValue,\n  alignRight = false,\n  ...other\n}: EmoijPickerProps) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji: BaseEmoji) => setValue(value + emoji?.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important'\n            })\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Icon icon={smilingFaceFill} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport fileTypePdf from '@iconify/icons-vscode-icons/file-type-pdf';\nimport fileTypeAi2 from '@iconify/icons-vscode-icons/file-type-ai2';\nimport fileTypeWord from '@iconify/icons-vscode-icons/file-type-word';\nimport fileTypeExcel from '@iconify/icons-vscode-icons/file-type-excel';\nimport fileTypeVideo from '@iconify/icons-vscode-icons/file-type-video';\nimport fileTypePowerpoint from '@iconify/icons-vscode-icons/file-type-powerpoint';\nimport fileTypePhotoshop2 from '@iconify/icons-vscode-icons/file-type-photoshop2';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = { width: 28, height: 28 };\n\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\n\nexport function getFileType(fileUrl: string = '') {\n  return fileUrl.split('.').pop() || '';\n}\n\nexport function getFileName(fileUrl: string) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\n\nexport function getFileFullName(fileUrl: string) {\n  return fileUrl.split('/').pop();\n}\n\nexport function getFileFormat(fileUrl: string) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nexport function getFileThumb(fileUrl: string) {\n  let thumb;\n  switch (getFileFormat(fileUrl)) {\n    case 'image':\n      thumb = <img src={fileUrl} alt={fileUrl} />;\n      break;\n    case 'video':\n      thumb = <Icon icon={fileTypeVideo} {...ICON_SIZE} />;\n      break;\n    case 'word':\n      thumb = <Icon icon={fileTypeWord} {...ICON_SIZE} />;\n      break;\n    case 'excel':\n      thumb = <Icon icon={fileTypeExcel} {...ICON_SIZE} />;\n      break;\n    case 'powerpoint':\n      thumb = <Icon icon={fileTypePowerpoint} {...ICON_SIZE} />;\n      break;\n    case 'pdf':\n      thumb = <Icon icon={fileTypePdf} {...ICON_SIZE} />;\n      break;\n    case 'photoshop':\n      thumb = <Icon icon={fileTypePhotoshop2} {...ICON_SIZE} />;\n      break;\n    case 'illustrator':\n      thumb = <Icon icon={fileTypeAi2} {...ICON_SIZE} />;\n      break;\n    default:\n      thumb = <Icon icon={fileFill} {...ICON_SIZE} />;\n  }\n  return thumb;\n}\n","import { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport { capitalCase } from 'change-case';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\nimport roundPowerSettingsNew from '@iconify/icons-ic/round-power-settings-new';\n// material\nimport {\n  Box,\n  List,\n  Select,\n  Divider,\n  Popover,\n  Tooltip,\n  ListItem,\n  Typography,\n  IconButton,\n  ListItemIcon,\n  ListItemText\n} from '@material-ui/core';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n//\nimport MyAvatar from '../../MyAvatar';\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'] as const;\n\nexport default function ChatAccount() {\n  const { user } = useAuth();\n  const [open, setOpen] = useState<HTMLDivElement | null>(null);\n  const [status, setStatus] = useState<\n    'online' | 'away' | 'busy' | 'unread' | 'offline' | 'invisible'\n  >('online');\n\n  const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  return (\n    <>\n      <Box sx={{ position: 'relative' }}>\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\n      </Box>\n\n      <Popover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n      >\n        <Box\n          sx={{\n            py: 2,\n            pr: 1,\n            pl: 2.5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <MyAvatar />\n\n          <Box sx={{ ml: 2, mr: 3 }}>\n            <Typography noWrap variant=\"subtitle1\">\n              {user?.displayName}\n            </Typography>\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user?.email}\n            </Typography>\n          </Box>\n\n          <Tooltip title=\"Log out\">\n            <IconButton>\n              <Icon icon={roundPowerSettingsNew} width={24} height={24} />\n            </IconButton>\n          </Tooltip>\n        </Box>\n\n        <Divider />\n\n        <List>\n          <ListItem disableGutters sx={{ py: 1, px: 2.5 }}>\n            <ListItemIcon>\n              <Box\n                sx={{\n                  width: 24,\n                  height: 24,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <BadgeStatus status={status} />\n              </Box>\n            </ListItemIcon>\n            <ListItemText>\n              <Select\n                native\n                fullWidth\n                disableUnderline\n                size=\"small\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n                sx={{\n                  '& svg': { display: `none` },\n                  '& select': {\n                    padding: 0,\n                    typography: 'body2',\n                    '&:focus': { bgcolor: 'transparent' }\n                  }\n                }}\n              >\n                {STATUS.map((option) => (\n                  <option key={option} value={option}>\n                    {capitalCase(option)}\n                  </option>\n                ))}\n              </Select>\n            </ListItemText>\n          </ListItem>\n\n          <ListItem button disableGutters sx={{ py: 1, px: 2.5 }}>\n            <ListItemIcon>\n              <Icon icon={roundAccountBox} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Profile\"\n              primaryTypographyProps={{\n                variant: 'body2'\n              }}\n            />\n          </ListItem>\n\n          <ListItem button disableGutters sx={{ py: 1, px: 2.5 }}>\n            <ListItemIcon>\n              <Icon icon={settings2Fill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Settings\"\n              primaryTypographyProps={{\n                variant: 'body2'\n              }}\n            />\n          </ListItem>\n        </List>\n      </Popover>\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  ClickAwayListener\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  marginTop: theme.spacing(2)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  transition: theme.transitions.create('box-shadow', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\ntype ChatContactSearchProps = {\n  query: string;\n  onChange: React.ChangeEventHandler;\n  onFocus: VoidFunction;\n  onClickAway: VoidFunction;\n};\n\nexport default function ChatContactSearch({\n  query,\n  onChange,\n  onFocus,\n  onClickAway,\n  ...other\n}: ChatContactSearchProps) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <RootStyle {...other}>\n        <FormControl fullWidth size=\"small\">\n          <SearchStyle\n            value={query}\n            onFocus={onFocus}\n            onChange={onChange}\n            placeholder=\"Search contacts...\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","import { last } from 'lodash';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Avatar, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\n// @types\nimport { Conversation } from '../../../@types/chat';\n//\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItem)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all')\n}));\n\nconst AvatarWrapperStyle = styled('div')(({ theme }) => ({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\n}));\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation: Conversation, currentUserId: string) => {\n  const otherParticipants = conversation.participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n  const displayNames = otherParticipants.map((participant) => participant.name).join(', ');\n\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n\ntype ChatConversationItemProps = {\n  isSelected: boolean;\n  conversation: Conversation;\n  isOpenSidebar: boolean;\n  onSelectConversation: VoidFunction;\n};\n\nexport default function ChatConversationItem({\n  isSelected,\n  conversation,\n  onSelectConversation,\n  isOpenSidebar\n}: ChatConversationItemProps) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = last(conversation.messages)?.createdAt || '';\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup =\n    isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      button\n      disableGutters\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' })\n      }}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-child(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\n                  }\n                },\n                '&:nth-child(2)': { top: 2, right: 0 }\n              }\n            })\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && participant?.status && (\n                <BadgeStatus\n                  status={participant.status}\n                  sx={{ right: 2, bottom: 2, position: 'absolute' }}\n                />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n          {isOnlineGroup && (\n            <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n          )}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2'\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary'\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column'\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled'\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\n// material\nimport { List, ListProps } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// @types\nimport { Conversation } from '../../../@types/chat';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\ninterface ChatConversationListProps extends ListProps {\n  conversations: { byId: Record<string, Conversation>; allIds: string[] };\n  isOpenSidebar: boolean;\n  activeConversationId: string | null;\n}\n\nexport default function ChatConversationList({\n  conversations,\n  isOpenSidebar,\n  activeConversationId,\n  ...other\n}: ChatConversationListProps) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId: string) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      if (otherParticipant?.username) {\n        conversationKey = otherParticipant?.username;\n      }\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  return (\n    <List disablePadding {...other}>\n      {conversations.allIds.map((conversationId) => (\n        <ChatConversationItem\n          key={conversationId}\n          isOpenSidebar={isOpenSidebar}\n          conversation={conversations.byId[conversationId]}\n          isSelected={activeConversationId === conversationId}\n          onSelectConversation={() => handleSelectConversation(conversationId)}\n        />\n      ))}\n    </List>\n  );\n}\n","import { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\n// material\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Avatar, TextField, Typography, Autocomplete } from '@material-ui/core';\n// @types\nimport { Participant } from '../../../@types/chat';\n//\nimport { MChip } from '../../@material-extend';\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 3)\n}));\n\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\n  '& .MuiAutocomplete-root': {\n    minWidth: 280,\n    marginLeft: theme.spacing(2),\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\n      boxShadow: theme.customShadows.z8\n    }\n  },\n  '& .MuiAutocomplete-inputRoot': {\n    transition: theme.transitions.create('box-shadow', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter\n    }),\n    '& fieldset': {\n      borderWidth: `1px !important`,\n      borderColor: `${theme.palette.grey[500_32]} !important`\n    }\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ntype ChatHeaderComposeProps = {\n  contacts: Participant[];\n  recipients: Participant[];\n  onAddRecipients: (data: Participant[]) => void;\n};\n\nexport default function ChatHeaderCompose({\n  contacts,\n  recipients,\n  onAddRecipients\n}: ChatHeaderComposeProps) {\n  const [query, setQuery] = useState('');\n\n  const handleAddRecipient = (recipients: Participant[]) => {\n    setQuery('');\n    onAddRecipients(recipients);\n  };\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <AutocompleteStyle>\n        <Autocomplete\n          multiple\n          size=\"small\"\n          disablePortal\n          popupIcon={null}\n          noOptionsText={<SearchNotFound searchQuery={query} />}\n          onChange={(e, value) => handleAddRecipient(value)}\n          onInputChange={(e, value) => setQuery(value)}\n          options={contacts}\n          getOptionLabel={(recipient) => recipient.name}\n          renderOption={(props, recipient, { inputValue, selected }) => {\n            const { name, avatar } = recipient;\n            const matches = match(name, inputValue);\n            const parts = parse(name, matches);\n            return (\n              <li {...props}>\n                <Box\n                  sx={{\n                    width: 32,\n                    height: 32,\n                    overflow: 'hidden',\n                    borderRadius: '50%',\n                    position: 'relative'\n                  }}\n                >\n                  <Avatar alt={name} src={avatar} />\n                  <Box\n                    sx={{\n                      top: 0,\n                      opacity: 0,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      position: 'absolute',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                      transition: (theme) =>\n                        theme.transitions.create('opacity', {\n                          easing: theme.transitions.easing.easeInOut,\n                          duration: theme.transitions.duration.shorter\n                        }),\n                      ...(selected && {\n                        opacity: 1,\n                        color: 'primary.main'\n                      })\n                    }}\n                  >\n                    <Icon icon={checkmarkFill} width={20} height={20} />\n                  </Box>\n                </Box>\n                <Box sx={{ ml: 2 }} />\n                {parts.map((part, index) => (\n                  <Typography\n                    key={index}\n                    variant=\"subtitle2\"\n                    color={part.highlight ? 'primary' : 'textPrimary'}\n                  >\n                    {part.text}\n                  </Typography>\n                ))}\n              </li>\n            );\n          }}\n          renderTags={(recipients, getTagProps) =>\n            recipients.map((recipient, index) => {\n              const { name, avatar } = recipient;\n              return (\n                // eslint-disable-next-line react/jsx-key\n                <MChip\n                  size=\"small\"\n                  label={name}\n                  color=\"info\"\n                  avatar={<Avatar alt={name} src={avatar} />}\n                  {...getTagProps({ index })}\n                />\n              );\n            })\n          }\n          renderInput={(params) => (\n            <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />\n          )}\n        />\n      </AutocompleteStyle>\n    </RootStyle>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport videoFill from '@iconify/icons-eva/video-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Link, Avatar, Typography, AvatarGroup } from '@material-ui/core';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// @types\nimport { Participant } from '../../../@types/chat';\n//\nimport { MIconButton } from '../../@material-extend';\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexShrink: 0,\n  minHeight: 92,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 3)\n}));\n\n// ----------------------------------------------------------------------\n\nfunction OneAvatar({ participants }: { participants: Participant[] }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined || !participant.status) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <Avatar src={participant.avatar} alt={participant.name} />\n        <BadgeStatus\n          status={participant.status}\n          sx={{ position: 'absolute', right: 2, bottom: 2 }}\n        />\n      </Box>\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {participant.status !== 'offline'\n            ? capitalCase(participant.status)\n            : fToNow(participant.lastActivity || '')}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction GroupAvatar({ participants }: { participants: Participant[] }) {\n  return (\n    <div>\n      <AvatarGroup\n        max={3}\n        sx={{\n          mb: 0.5,\n          '& .MuiAvatar-root': { width: 32, height: 32 }\n        }}\n      >\n        {participants.map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\n        ))}\n      </AvatarGroup>\n      <Link\n        variant=\"body2\"\n        underline=\"none\"\n        component=\"button\"\n        color=\"text.secondary\"\n        onClick={() => {}}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {participants.length} persons\n          <Icon icon={arrowIosForwardFill} />\n        </Box>\n      </Link>\n    </div>\n  );\n}\n\nexport default function ChatHeaderDetail({ participants }: { participants: Participant[] }) {\n  const isGroup = participants.length > 1;\n\n  return (\n    <RootStyle>\n      {isGroup ? (\n        <GroupAvatar participants={participants} />\n      ) : (\n        <OneAvatar participants={participants} />\n      )}\n\n      <Box sx={{ flexGrow: 1 }} />\n      <MIconButton>\n        <Icon icon={phoneFill} width={20} height={20} />\n      </MIconButton>\n      <MIconButton>\n        <Icon icon={videoFill} width={20} height={20} />\n      </MIconButton>\n      <MIconButton>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </MIconButton>\n    </RootStyle>\n  );\n}\n","import faker from 'faker';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport micFill from '@iconify/icons-eva/mic-fill';\nimport roundSend from '@iconify/icons-ic/round-send';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Input, Divider, IconButton, InputAdornment } from '@material-ui/core';\n// @types\nimport { SendMessage } from '../../../@types/chat';\n//\nimport EmojiPicker from '../../EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2)\n}));\n\n// ----------------------------------------------------------------------\n\ntype ChatMessageInputProps = {\n  disabled: boolean;\n  conversationId: string;\n  onSend: (data: SendMessage) => void;\n};\n\nexport default function ChatMessageInput({\n  disabled,\n  conversationId,\n  onSend\n}: ChatMessageInputProps) {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [message, setMessage] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend) {\n      onSend({\n        conversationId,\n        messageId: faker.datatype.uuid(),\n        message,\n        contentType: 'text',\n        attachments: [],\n        createdAt: new Date(),\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0'\n      });\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        endAdornment={\n          <Box sx={{ flexShrink: 0, mr: 1.5, '& > *': { mx: 0.5 } }}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Icon icon={attach2Fill} width={24} height={24} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\">\n              <Icon icon={micFill} width={24} height={24} />\n            </IconButton>\n          </Box>\n        }\n        sx={{ height: '100%' }}\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Icon icon={roundSend} width={24} height={24} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n","import { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Avatar, Box, Typography } from '@material-ui/core';\n// @types\nimport { Conversation, Message } from '../../../@types/chat';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary\n}));\n\nconst MessageImgStyle = styled('img')(({ theme }) => ({\n  height: 200,\n  minWidth: 296,\n  width: '100%',\n  cursor: 'pointer',\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadius\n}));\n\n// ----------------------------------------------------------------------\n\ntype ChatMessageItemProps = {\n  message: Message;\n  conversation: Conversation;\n  onOpenLightbox: (value: string) => void;\n};\n\nexport default function ChatMessageItem({\n  message,\n  conversation,\n  onOpenLightbox\n}: ChatMessageItemProps) {\n  const sender = conversation.participants.find(\n    (participant) => participant.id === message.senderId\n  );\n  const senderDetails =\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\n      ? { type: 'me' }\n      : { avatar: sender?.avatar, name: sender?.name };\n\n  const isMe = senderDetails.type === 'me';\n  const isImage = message.contentType === 'image';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto'\n          })\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar\n            alt={senderDetails.name}\n            src={senderDetails.avatar}\n            sx={{ width: 32, height: 32 }}\n          />\n        )}\n\n        <Box sx={{ ml: 2 }}>\n          <InfoStyle noWrap variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && {\n                color: 'grey.800',\n                bgcolor: 'primary.lighter'\n              })\n            }}\n          >\n            {isImage ? (\n              <MessageImgStyle\n                alt=\"attachment\"\n                src={message.body}\n                onClick={() => onOpenLightbox(message.body)}\n              />\n            ) : (\n              <Typography variant=\"body2\">{message.body}</Typography>\n            )}\n          </ContentStyle>\n        </Box>\n      </Box>\n    </RootStyle>\n  );\n}\n","import { findIndex } from 'lodash';\nimport { useEffect, useState, useRef } from 'react';\n// @types\nimport { Conversation } from '../../../@types/chat';\n//\nimport Scrollbar from '../../Scrollbar';\nimport LightboxModal from '../../LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\ntype ChatMessageListProps = {\n  conversation: Conversation;\n};\n\nexport default function ChatMessageList({ conversation }: ChatMessageListProps) {\n  const scrollRef = useRef<HTMLDivElement>(null);\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState<number>(0);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversation.messages]);\n\n  const images = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url: string) => {\n    const selectedImage = findIndex(images, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3 }}>\n      {conversation.messages.map((message) => (\n        <ChatMessageItem\n          key={message.id}\n          message={message}\n          conversation={conversation}\n          onOpenLightbox={handleOpenLightbox}\n        />\n      ))}\n\n      <LightboxModal\n        images={images}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onClose={() => setOpenLightbox(false)}\n      />\n    </Scrollbar>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { uniq, flatten } from 'lodash';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Button, Divider, Collapse, Typography } from '@material-ui/core';\n// theme\nimport typography from '../../../theme/typography';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\n// @types\nimport { Conversation, Message } from '../../../@types/chat';\n//\nimport Scrollbar from '../../Scrollbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  overflow: 'hidden',\n  flexDirection: 'column',\n  paddingBottom: theme.spacing(2)\n}));\n\nconst FileItemStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  padding: theme.spacing(0, 2.5)\n}));\n\nconst FileThumbStyle = styled('div')(({ theme }) => ({\n  width: 40,\n  height: 40,\n  flexShrink: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[500_16],\n  '& img': { width: '100%', height: '100%' },\n  '& svg': { width: 24, height: 24 }\n}));\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...typography.overline,\n  height: 40,\n  flexShrink: 0,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\n// ----------------------------------------------------------------------\n\nfunction AttachmentItem({ file, fileUrl }: { file: Message; fileUrl: string }) {\n  return (\n    <FileItemStyle key={fileUrl}>\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\n        <Typography variant=\"body2\" noWrap>\n          {getFileFullName(fileUrl)}\n        </Typography>\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(file.createdAt)}\n        </Typography>\n      </Box>\n    </FileItemStyle>\n  );\n}\n\ntype ChatRoomAttachmentProps = {\n  conversation: Conversation;\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\nexport default function ChatRoomAttachment({\n  conversation,\n  isCollapse,\n  onCollapse\n}: ChatRoomAttachmentProps) {\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments)))\n    .length;\n\n  return (\n    <RootStyle>\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Icon\n            icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        attachment ({totalAttachment})\n      </CollapseButtonStyle>\n\n      {!isCollapse && <Divider />}\n\n      <Scrollbar>\n        <Collapse in={isCollapse}>\n          {conversation.messages.map((file) => (\n            <div key={file.id}>\n              {file.attachments.map((fileUrl) => (\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\n              ))}\n            </div>\n          ))}\n        </Collapse>\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport pinFill from '@iconify/icons-eva/pin-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport emailFill from '@iconify/icons-eva/email-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Avatar, Button, Divider, Collapse, Typography } from '@material-ui/core';\n// theme\nimport typography from '../../../theme/typography';\n// @types\nimport { Participant } from '../../../@types/chat';\n\n// ----------------------------------------------------------------------\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  margin: theme.spacing(1.5, 0)\n}));\n\nconst RowIconStyle = styled(Icon)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginTop: 4,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary\n}));\n\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: 160,\n  wordWrap: 'break-word',\n  ...typography.body2\n}));\n\n// ----------------------------------------------------------------------\n\ntype ChatRoomOneParticipantProps = {\n  participants: Participant[];\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\nexport default function ChatRoomOneParticipant({\n  participants,\n  isCollapse,\n  onCollapse\n}: ChatRoomOneParticipantProps) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          pt: 4,\n          pb: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column'\n        }}\n      >\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {participant.position}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Divider />\n\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Icon\n            icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        information\n      </CollapseButtonStyle>\n\n      <Collapse in={isCollapse}>\n        <Box sx={{ px: 2.5, pb: 1 }}>\n          <RowStyle>\n            <RowIconStyle icon={pinFill} />\n            <RowTextStyle>{participant.address}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={phoneFill} />\n            <RowTextStyle>{participant.phone}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={emailFill} />\n            <RowTextStyle>{participant.email}</RowTextStyle>\n          </RowStyle>\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport pinFill from '@iconify/icons-eva/pin-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport emailFill from '@iconify/icons-eva/email-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Avatar, Typography, DialogContent } from '@material-ui/core';\n// @types\nimport { Participant } from '../../../@types/chat';\n//\nimport { DialogAnimate } from '../../animate';\n\n// ----------------------------------------------------------------------\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: theme.spacing(1.5)\n}));\n\nconst IconStyle = styled(Icon)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary\n}));\n\n// ----------------------------------------------------------------------\n\ntype ChatRoomPopupProps = {\n  participant: Participant;\n  isOpen: boolean;\n  onClose: VoidFunction;\n};\n\nexport default function ChatRoomPopup({ participant, isOpen, onClose }: ChatRoomPopupProps) {\n  const { name, avatar, position, address, phone, email } = participant;\n\n  return (\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose}>\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\n        <Avatar\n          alt={name}\n          src={avatar}\n          sx={{\n            mt: 5,\n            mb: 2,\n            mx: 'auto',\n            width: 96,\n            height: 96\n          }}\n        />\n        <Typography variant=\"h6\">{name}</Typography>\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\n          {position}\n        </Typography>\n\n        <RowStyle>\n          <IconStyle icon={pinFill} />\n          <Typography variant=\"body2\">{address}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <IconStyle icon={phoneFill} />\n          <Typography variant=\"body2\">{phone}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <IconStyle icon={emailFill} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </RowStyle>\n      </DialogContent>\n    </DialogAnimate>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  List,\n  Avatar,\n  Button,\n  Collapse,\n  ListItem,\n  ListItemText,\n  ListItemAvatar\n} from '@material-ui/core';\n// theme\nimport typography from '../../../theme/typography';\n// @types\nimport { Participant as TParticipant } from '../../../@types/chat';\n//\nimport Scrollbar from '../../Scrollbar';\nimport BadgeStatus from '../../BadgeStatus';\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\n// ----------------------------------------------------------------------\n\ntype ParticipantProps = {\n  participant: TParticipant;\n  isOpen: boolean;\n  onClosePopup: VoidFunction;\n  onShowPopup: VoidFunction;\n};\n\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }: ParticipantProps) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItem button disableGutters onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItem>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n\ntype ChatRoomGroupParticipantProps = {\n  participants: TParticipant[];\n  selectUserId: string | null;\n  onShowPopupUserInfo: (id: string | null) => void;\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse\n}: ChatRoomGroupParticipantProps) {\n  return (\n    <>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Icon\n            icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { useMediaQuery, Divider, IconButton } from '@material-ui/core';\n// @types\nimport { Conversation, Participant } from '../../../@types/chat';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 240,\n  flexShrink: 0,\n  display: 'flex',\n  position: 'relative',\n  flexDirection: 'column',\n  borderLeft: `solid 1px ${theme.palette.divider}`,\n  transition: theme.transitions.create('width')\n}));\n\nconst ToggleButtonStyle = styled('div')(({ theme }) => ({\n  borderRight: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  position: 'absolute',\n  alignItems: 'center',\n  top: theme.spacing(1),\n  left: theme.spacing(-4),\n  width: theme.spacing(4),\n  height: theme.spacing(4),\n  justifyContent: 'center',\n  boxShadow: theme.customShadows.z8,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderTopLeftRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.paper,\n  borderBottomLeftRadius: theme.shape.borderRadius\n}));\n\n// ----------------------------------------------------------------------\n\ntype ChatRoomProps = {\n  conversation: Conversation;\n  participants: Participant[];\n};\n\nexport default function ChatRoom({ conversation, participants }: ChatRoomProps) {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState<string | null>(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (isMobile) {\n      return setOpenSidebar(false);\n    }\n    return setOpenSidebar(true);\n  }, [isMobile]);\n\n  return (\n    <RootStyle\n      sx={{\n        ...(!openSidebar && {\n          width: 0,\n          '& > *': { overflow: 'hidden' }\n        })\n      }}\n    >\n      <ToggleButtonStyle>\n        <IconButton onClick={() => setOpenSidebar(!openSidebar)}>\n          <Icon\n            width={16}\n            height={16}\n            icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill}\n          />\n        </IconButton>\n      </ToggleButtonStyle>\n\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <div>\n          <ChatRoomOneParticipant\n            participants={participants}\n            isCollapse={showInfo}\n            onCollapse={() => setShowInfo((prev) => !prev)}\n          />\n        </div>\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </RootStyle>\n  );\n}\n","// material\nimport {\n  List,\n  Avatar,\n  ListItem,\n  Typography,\n  ListItemText,\n  ListItemAvatar\n} from '@material-ui/core';\n// @types\nimport { Contact } from '../../../@types/chat';\n//\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\ntype ChatSearchResultsProps = {\n  query: string;\n  results: Contact[];\n  onSelectContact: (contact: Contact) => void;\n};\n\nexport default function ChatSearchResults({\n  query,\n  results,\n  onSelectContact\n}: ChatSearchResultsProps) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItem\n            key={result.id}\n            button\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2'\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral'\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, useMediaQuery } from '@material-ui/core';\n// redux\nimport { RootState, useSelector } from '../../../redux/store';\n// utils\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// @types\nimport { Contact } from '../../../@types/chat';\n//\nimport { MIconButton } from '../../@material-extend';\nimport Scrollbar from '../../Scrollbar';\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 320,\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  transition: theme.transitions.create('width'),\n  borderRight: `1px solid ${theme.palette.divider}`\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchFocused, setSearchFocused] = useState(false);\n  const displayResults = searchQuery && isSearchFocused;\n  const { conversations, activeConversationId } = useSelector((state: RootState) => state.chat);\n\n  useEffect(() => {\n    if (isMobile) {\n      return setOpenSidebar(false);\n    }\n    return setOpenSidebar(true);\n  }, [isMobile]);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      const { value } = event.target;\n      setSearchQuery(value);\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value }\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = (username: string) => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = (result: Contact) => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  return (\n    <RootStyle sx={{ ...(!openSidebar && { width: 96 }) }}>\n      <Box sx={{ py: 2, px: 3 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {openSidebar && (\n            <>\n              <ChatAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <MIconButton onClick={() => setOpenSidebar(!openSidebar)}>\n            <Icon\n              width={20}\n              height={20}\n              icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill}\n            />\n          </MIconButton>\n\n          {openSidebar && (\n            <MIconButton\n              // @ts-ignore\n              to={PATH_DASHBOARD.chat.new}\n              component={RouterLink}\n            >\n              <Icon icon={editFill} width={20} height={20} />\n            </MIconButton>\n          )}\n        </Box>\n\n        {openSidebar && (\n          <ChatContactSearch\n            query={searchQuery}\n            onFocus={handleSearchFocus}\n            onChange={handleChangeSearch}\n            onClickAway={handleClickAwaySearch}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!displayResults ? (\n          <ChatConversationList\n            conversations={conversations}\n            isOpenSidebar={openSidebar}\n            activeConversationId={activeConversationId}\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\n          />\n        ) : (\n          <ChatSearchResults\n            query={searchQuery}\n            results={searchResults}\n            onSelectContact={handleSelectContact}\n          />\n        )}\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n// material\nimport { Box, Divider } from '@material-ui/core';\n// redux\nimport { RootState, useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// @types\nimport { Conversation, Participant, SendMessage } from '../../../@types/chat';\n//\nimport ChatRoom from './ChatRoom';\nimport ChatMessageList from './ChatMessageList';\nimport ChatHeaderDetail from './ChatHeaderDetail';\nimport ChatMessageInput from './ChatMessageInput';\nimport ChatHeaderCompose from './ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst conversationSelector = (state: RootState): Conversation => {\n  const { conversations, activeConversationId } = state.chat;\n  const conversation = activeConversationId ? conversations.byId[activeConversationId] : null;\n  if (conversation) {\n    return conversation;\n  }\n  const initState: Conversation = {\n    id: '',\n    messages: [],\n    participants: [],\n    unreadCount: 0,\n    type: ''\n  };\n  return initState;\n};\n\nexport default function ChatWindow() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const { conversationKey } = useParams();\n  const { contacts, recipients, participants, activeConversationId } = useSelector(\n    (state: RootState) => state.chat\n  );\n  const conversation = useSelector((state: RootState) => conversationSelector(state));\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\n  const displayParticipants = participants.filter(\n    (item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n  );\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(conversationKey));\n      try {\n        await dispatch(getConversation(conversationKey));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (recipients: Participant[]) => {\n    dispatch(addRecipients(recipients));\n  };\n\n  const handleSendMessage = async (value: SendMessage) => {\n    try {\n      dispatch(onSendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n      {mode === 'DETAIL' ? (\n        <ChatHeaderDetail participants={displayParticipants} />\n      ) : (\n        <ChatHeaderCompose\n          recipients={recipients}\n          contacts={Object.values(contacts.byId)}\n          onAddRecipients={handleAddRecipients}\n        />\n      )}\n\n      <Divider />\n\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\n        <Box sx={{ display: 'flex', flexGrow: 1, flexDirection: 'column' }}>\n          <ChatMessageList conversation={conversation} />\n\n          <Divider />\n\n          <ChatMessageInput\n            // @ts-ignore\n            conversationId={activeConversationId}\n            onSend={handleSendMessage}\n            disabled={pathname === PATH_DASHBOARD.chat.new}\n          />\n        </Box>\n\n        {mode === 'DETAIL' && (\n          <ChatRoom conversation={conversation} participants={displayParticipants} />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Card, Container } from '@material-ui/core';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getConversations, getContacts } from '../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { ChatSidebar, ChatWindow } from '../../components/_dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function Chat() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Chat | Minimal-UI\">\n      <Container maxWidth=\"xl\">\n        <HeaderBreadcrumbs\n          heading=\"Chat\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\n        />\n        <Card sx={{ height: '72vh', display: 'flex' }}>\n          <ChatSidebar />\n          <ChatWindow />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}