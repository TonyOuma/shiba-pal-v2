{"version":3,"sources":["components/map/controls/MapControlFullscreen.tsx","components/map/controls/MapControlGeolocate.tsx","components/map/controls/MapControlMarker.tsx","components/map/controls/MapControlNavigation.tsx","components/map/controls/MapControlPopup.tsx","components/map/controls/MapControlScale.tsx","components/map/map-dynamic-styling/ControlPanel.tsx","components/map/map-dynamic-styling/index.tsx"],"names":["FullscreenControlStyle","styled","FullscreenControl","theme","zIndex","borderRadius","overflow","top","spacing","left","boxShadow","customShadows","z8","transform","MapControlFullscreen","props","GeolocateControlStyle","GeolocateControl","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","IconStyle","height","stroke","cursor","fill","palette","error","main","MapControlMarker","onClick","other","viewBox","d","NavigationControlStyle","NavigationControl","bottom","borderTop","divider","MapControlNavigation","PopupStyle","Popup","isRTL","direction","maxWidth","padding","z20","shape","backgroundColor","grey","width","fontSize","opacity","color","common","white","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","onClose","sx","children","tipSize","anchor","closeButton","closeOnClick","RootStyle","background","position","border","lineHeight","backgroundImage","MapControlScale","unit","defaultMapStyle","fromJS","MAP_STYLE","CATEGORIES","LAYER_SELECTOR","water","parks","buildings","roads","labels","COLOR_CLASS","line","symbol","minWidth","backdropFilter","WebkitBackdropFilter","alpha","ColorBoxStyle","display","alignItems","justifyContent","WebkitAppearance","ControlPanel","onChange","useTheme","useState","visibility","setVisibility","primary","dark","warning","darker","setColor","useEffect","updateMapStyle","layers","get","filter","layer","id","every","name","test","map","type","category","find","setIn","set","Box","py","value","disabled","e","state","onColorChange","target","Typography","variant","flexGrow","textTransform","Switch","size","checked","onVisibilityChange","MapDynamicStyling","mapStyle","setMapStyle","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","onViewportChange"],"mappings":"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","file":"static/js/103.bc2a07b8.chunk.js","sourcesContent":["import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { FullscreenControl, FullscreenControlProps } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(1.5),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& span.mapboxgl-ctrl-icon': {\n    transform: ' scale(0.75)'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlFullscreen(props: FullscreenControlProps) {\n  return <FullscreenControlStyle {...props} />;\n}\n","import { GeolocateControl } from 'react-map-gl';\nimport { GeolocateControlProps } from 'react-map-gl/src/components/geolocate-control';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  top: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlGeolocate({ ...props }: GeolocateControlProps) {\n  return (\n    <GeolocateControlStyle\n      positionOptions={{ enableHighAccuracy: true }}\n      trackUserLocation={true}\n      {...props}\n    />\n  );\n}\n","import { Marker, MarkerProps } from 'react-map-gl';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\nconst SIZE = 20;\n\nconst IconStyle = styled('svg')(({ theme }) => ({\n  height: SIZE,\n  stroke: 'none',\n  cursor: 'pointer',\n  fill: theme.palette.error.main,\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n}));\n\n// ----------------------------------------------------------------------\n\ninterface MapControlMarkerProps extends MarkerProps {\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\n}\n\nexport default function MapControlMarker({ onClick, ...other }: MapControlMarkerProps) {\n  return (\n    <Marker {...other}>\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\n        <path d={ICON} />\n      </IconStyle>\n    </Marker>\n  );\n}\n","import { NavigationControl } from 'react-map-gl';\nimport { NavigationControlProps } from 'react-map-gl/src/components/navigation-control';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\n  zIndex: 99,\n  borderRadius: 8,\n  overflow: 'hidden',\n  bottom: theme.spacing(6),\n  left: theme.spacing(1.5),\n  boxShadow: theme.customShadows.z8,\n  '& button+button': {\n    borderTop: `1px solid ${theme.palette.divider}`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlNavigation({ ...other }: NavigationControlProps) {\n  return <NavigationControlStyle {...other} />;\n}\n","import { Popup, PopupProps } from 'react-map-gl';\n// material\nimport { SxProps } from '@material-ui/system';\nimport { Theme, experimentalStyled as styled } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\n// @ts-ignore\nconst PopupStyle = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800]\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1\n      },\n      '&:focus': {\n        outline: 'none'\n      }\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800]\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800]\n    }\n  };\n});\n\ninterface MapControlPopupProps extends PopupProps {\n  sx?: SxProps<Theme>;\n}\n\n// ----------------------------------------------------------------------\n\nexport default function MapControlPopup({ onClose, sx, children, ...other }: MapControlPopupProps) {\n  return (\n    <PopupStyle\n      tipSize={8}\n      anchor=\"bottom\"\n      onClose={onClose}\n      closeButton={true}\n      closeOnClick={false}\n      sx={sx}\n      {...other}\n    >\n      {children}\n    </PopupStyle>\n  );\n}\n","import { ScaleControl } from 'react-map-gl';\nimport { ScaleControlProps } from 'react-map-gl/src/components/scale-control';\n// material\nimport { experimentalStyled as styled, Theme } from '@material-ui/core/styles';\nimport { SxProps } from '@material-ui/system';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  background: 'red',\n  position: 'absolute',\n  left: theme.spacing(1.5),\n  bottom: theme.spacing(3.5),\n  boxShadow: theme.customShadows.z8,\n  '& .mapboxgl-ctrl': {\n    border: 'none',\n    borderRadius: 4,\n    lineHeight: '14px',\n    color: theme.palette.common.white,\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ninterface MapControlScaleProps extends ScaleControlProps {\n  sx?: SxProps<Theme>;\n}\n\nexport default function MapControlScale({ sx, ...other }: MapControlScaleProps) {\n  return (\n    <RootStyle sx={sx}>\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\n    </RootStyle>\n  );\n}\n","import { fromJS } from 'immutable';\nimport { useEffect, useState } from 'react';\n// material\nimport { alpha, useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Switch, Typography } from '@material-ui/core';\n//\nimport MAP_STYLE from '../assets/map-style-basic-v8.json';\n\n// ----------------------------------------------------------------------\n\nconst defaultMapStyle = fromJS(MAP_STYLE);\n\nconst CATEGORIES = ['labels', 'roads', 'buildings', 'parks', 'water', 'background'] as const;\n\nconst LAYER_SELECTOR = {\n  background: /background/,\n  water: /water/,\n  parks: /park/,\n  buildings: /building/,\n  roads: /bridge|road|tunnel/,\n  labels: /label|place|poi/\n} as const;\n\ntype ColorClassKey = 'line' | 'fill' | 'background' | 'symbol';\n\nconst COLOR_CLASS = {\n  line: 'line-color',\n  fill: 'fill-color',\n  background: 'background-color',\n  symbol: 'text-color'\n} as const;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  zIndex: 99,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  backdropFilter: 'blur(8px)',\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.grey[900], 0.72)\n}));\n\nconst ColorBoxStyle = styled('div')(({ theme }) => ({\n  width: 20,\n  height: 20,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginRight: theme.spacing(1),\n  border: `solid 1px ${theme.palette.grey[500]}`,\n  '& input': {\n    width: 12,\n    height: 12,\n    border: 'none',\n    outline: 'none',\n    cursor: 'pointer',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-color-swatch-wrapper': { padding: 0 },\n    '&::-moz-color-swatch': { border: 'none', borderRadius: '50%' },\n    '&::-webkit-color-swatch': { border: 'none', borderRadius: '50%' }\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ControlPanel({ onChange }: { onChange: (value: string) => void }) {\n  const theme = useTheme();\n  const [visibility, setVisibility] = useState({\n    water: true,\n    parks: true,\n    roads: true,\n    labels: true,\n    buildings: true,\n    background: true\n  });\n  const [color, setColor] = useState({\n    water: theme.palette.grey[900],\n    labels: theme.palette.grey[800],\n    parks: theme.palette.primary.dark,\n    buildings: theme.palette.grey[900],\n    background: theme.palette.grey[700],\n    roads: theme.palette.warning.darker\n  });\n\n  useEffect(() => {\n    updateMapStyle({ color, visibility });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [color, visibility]);\n\n  const onColorChange = (name: string, value: string) => {\n    const state = {\n      ...color,\n      [name]: value\n    };\n    setColor(state);\n    updateMapStyle({\n      color: state,\n      visibility\n    });\n  };\n\n  const onVisibilityChange = (name: string, checked: boolean) => {\n    const state = {\n      ...visibility,\n      [name]: checked\n    };\n    setVisibility(state);\n    updateMapStyle({\n      color,\n      visibility: state\n    });\n  };\n\n  const updateMapStyle = ({\n    color,\n    visibility\n  }: {\n    color: Record<string, string>;\n    visibility: Record<string, boolean>;\n  }) => {\n    const layers = defaultMapStyle\n      .get('layers')\n      .filter((layer: any) => {\n        const id = layer.get('id');\n        return CATEGORIES.every((name) => visibility[name] || !LAYER_SELECTOR[name].test(id));\n      })\n      .map((layer: any) => {\n        const id = layer.get('id');\n        const type: ColorClassKey = layer.get('type');\n        const category = CATEGORIES.find((name) => LAYER_SELECTOR[name].test(id));\n        if (category && COLOR_CLASS[type]) {\n          return layer?.setIn(['paint', COLOR_CLASS[type]], color[category]);\n        }\n        return layer;\n      });\n    onChange(defaultMapStyle.set('layers', layers));\n  };\n\n  return (\n    <RootStyle>\n      {CATEGORIES.map((name) => (\n        <Box key={name} sx={{ py: 1, display: 'flex', alignItems: 'center' }}>\n          <ColorBoxStyle sx={{ ...(!visibility[name] && { opacity: 0.48 }) }}>\n            <input\n              type=\"color\"\n              value={color[name]}\n              disabled={!visibility[name]}\n              onChange={(e) => onColorChange(name, e.target.value)}\n            />\n          </ColorBoxStyle>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              flexGrow: 1,\n              textTransform: 'capitalize',\n              color: !visibility[name] ? 'text.disabled' : 'common.white'\n            }}\n          >\n            {name}\n          </Typography>\n          <Switch\n            size=\"small\"\n            checked={visibility[name]}\n            onChange={(e) => onVisibilityChange(name, e.target.checked)}\n          />\n        </Box>\n      ))}\n    </RootStyle>\n  );\n}\n","import { useState } from 'react';\nimport MapGL from 'react-map-gl';\nimport { InteractiveMapProps } from 'react-map-gl/src/components/interactive-map';\n//\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen\n} from '../controls';\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nexport default function MapDynamicStyling({ ...other }: InteractiveMapProps) {\n  const [mapStyle, setMapStyle] = useState('');\n  const [viewport, setViewport] = useState({\n    latitude: 37.805,\n    longitude: -122.447,\n    zoom: 15.5,\n    bearing: 0,\n    pitch: 0\n  });\n\n  return (\n    <>\n      <MapGL {...viewport} mapStyle={mapStyle} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </MapGL>\n\n      <ControlPanel onChange={setMapStyle} />\n    </>\n  );\n}\n"],"sourceRoot":""}