{"version":3,"sources":["components/HeaderBreadcrumbs.tsx","components/ColorSinglePicker.tsx","components/_dashboard/calendar/CalendarForm.tsx","components/_dashboard/calendar/CalendarToolbar.tsx","components/_dashboard/calendar/CalendarStyle.tsx","pages/dashboard/Calendar.tsx"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","IconColor","width","height","borderRadius","position","justifyContent","bgcolor","transition","theme","transitions","create","duration","shortest","icon","checkmarkFill","ColorSinglePicker","colors","row","color","isWhite","value","border","palette","divider","checkedIcon","transform","opacity","content","boxShadow","grey","COLOR_OPTIONS","getInitialValues","event","range","_event","title","description","textColor","allDay","start","Date","end","merge","CalendarForm","onCancel","enqueueSnackbar","useSnackbar","dispatch","useDispatch","isCreating","EventSchema","Yup","shape","max","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","resetForm","setSubmitting","newEvent","id","updateEvent","createEvent","error","console","errors","touched","handleSubmit","isSubmitting","getFieldProps","setFieldValue","handleDelete","deleteEvent","isDateError","isBefore","autoComplete","noValidate","DialogContent","pb","overflowY","TextField","fullWidth","label","Boolean","helperText","multiline","maxRows","FormControlLabel","control","Switch","checked","MobileDateTimePicker","inputFormat","onChange","date","renderInput","params","DialogActions","Tooltip","IconButton","onClick","trash2Fill","Box","Button","type","LoadingButton","loading","loadingIndicator","VIEW_OPTIONS","roundViewModule","roundViewWeek","roundViewDay","roundViewAgenda","RootStyle","styled","flexDirection","padding","spacing","breakpoints","up","CalendarToolbar","view","onNextDate","onPrevDate","onToday","onChangeView","mr","viewOption","ToggleButton","selected","Typography","my","xs","sm","fDate","arrowIosBackFill","size","mx","arrowIosForwardFill","CalendarStyle","marginLeft","marginBottom","info","light","main","background","default","neutral","hover","alpha","primary","text","borderColor","typography","subtitle2","backgroundColor","common","white","filter","top","left","boxSizing","zIndex","fontSize","lineHeight","overflow","whiteSpace","textOverflow","fontWeight","fontWeightBold","customShadows","z20","paper","borderBottom","margin","disabled","body2","marginTop","marginRight","caption","secondary","selectedEventSelector","state","calendar","events","selectedEventId","find","Calendar","useTheme","isMobile","useMediaQuery","down","calendarRef","useRef","useState","setDate","setView","selectedEvent","useSelector","isOpenModal","selectedRange","useEffect","getEvents","calendarEl","current","calendarApi","getApi","newView","changeView","handleResizeEvent","handleDropEvent","handleCloseModal","closeModal","Page","Container","maxWidth","name","PATH_DASHBOARD","root","startIcon","plusFill","openModal","Card","next","getDate","prev","today","weekends","editable","droppable","selectable","ref","rerenderDelay","initialDate","initialView","dayMaxEventRows","eventDisplay","headerToolbar","allDayMaintainDuration","eventResizableFromStart","select","arg","unselect","selectRange","eventDrop","eventClick","selectEvent","eventResize","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin","open","onClose","DialogTitle"],"mappings":"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","file":"static/js/93.f3a80197.chunk.js","sourcesContent":["import { ReactNode } from 'react';\nimport { isString } from 'lodash';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\nimport { MBreadcrumbsProps } from './@material-extend/MBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface HeaderBreadcrumbsProps extends MBreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: HeaderBreadcrumbsProps) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\n// material\nimport { Box, Radio, RadioGroup, BoxProps, RadioGroupProps } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nfunction IconColor({ sx, ...other }: BoxProps) {\n  return (\n    <Box\n      sx={{\n        width: 20,\n        height: 20,\n        display: 'flex',\n        borderRadius: '50%',\n        position: 'relative',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'currentColor',\n        transition: (theme) =>\n          theme.transitions.create('all', {\n            duration: theme.transitions.duration.shortest\n          }),\n        ...sx\n      }}\n      {...other}\n    >\n      <Icon icon={checkmarkFill} />\n    </Box>\n  );\n}\n\ninterface ColorSinglePickerProps extends RadioGroupProps {\n  colors: string[];\n}\n\nexport default function ColorSinglePicker({ colors, ...other }: ColorSinglePickerProps) {\n  return (\n    <RadioGroup row {...other}>\n      {colors.map((color) => {\n        const isWhite = color === '#FFFFFF' || color === 'white';\n\n        return (\n          <Radio\n            key={color}\n            value={color}\n            color=\"default\"\n            icon={\n              <IconColor\n                sx={{\n                  ...(isWhite && {\n                    border: (theme) => `solid 1px ${theme.palette.divider}`\n                  })\n                }}\n              />\n            }\n            checkedIcon={\n              <IconColor\n                sx={{\n                  transform: 'scale(1.4)',\n                  '&:before': {\n                    opacity: 0.48,\n                    width: '100%',\n                    content: \"''\",\n                    height: '100%',\n                    borderRadius: '50%',\n                    position: 'absolute',\n                    boxShadow: '4px 4px 8px 0 currentColor'\n                  },\n                  '& svg': { width: 12, height: 12, color: 'common.white' },\n                  ...(isWhite && {\n                    border: (theme) => `solid 1px ${theme.palette.divider}`,\n                    boxShadow: (theme) => `4px 4px 8px 0 ${theme.palette.grey[500_24]}`,\n                    '& svg': { width: 12, height: 12, color: 'common.black' }\n                  })\n                }}\n              />\n            }\n            sx={{\n              color,\n              '&:hover': { opacity: 0.72 }\n            }}\n          />\n        );\n      })}\n    </RadioGroup>\n  );\n}\n","import * as Yup from 'yup';\nimport { merge } from 'lodash';\nimport { isBefore } from 'date-fns';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport {\n  Box,\n  Button,\n  Switch,\n  Tooltip,\n  TextField,\n  IconButton,\n  DialogContent,\n  DialogActions,\n  FormControlLabel\n} from '@material-ui/core';\nimport { LoadingButton, MobileDateTimePicker } from '@material-ui/lab';\nimport { EventInput } from '@fullcalendar/common';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { createEvent, updateEvent, deleteEvent } from '../../../redux/slices/calendar';\n//\nimport ColorSinglePicker from '../../ColorSinglePicker';\n\n// ----------------------------------------------------------------------\n\nconst COLOR_OPTIONS = [\n  '#00AB55', // theme.palette.primary.main,\n  '#1890FF', // theme.palette.info.main,\n  '#94D82D', // theme.palette.success.main,\n  '#FFC107', // theme.palette.warning.main,\n  '#FF4842', // theme.palette.error.main\n  '#04297A', // theme.palette.info.darker\n  '#7A0C2E' // theme.palette.error.darker\n];\n\nconst getInitialValues = (event: EventInput, range: { start: Date; end: Date } | null) => {\n  // eslint-disable-next-line no-underscore-dangle\n  const _event = {\n    title: '',\n    description: '',\n    textColor: '#1890FF',\n    allDay: false,\n    start: range ? new Date(range.start) : new Date(),\n    end: range ? new Date(range.end) : new Date()\n  };\n\n  if (event || range) {\n    return merge({}, _event, event);\n  }\n\n  return _event;\n};\n\n// ----------------------------------------------------------------------\n\ntype CalendarFormProps = {\n  event: EventInput;\n  range: {\n    start: Date;\n    end: Date;\n  } | null;\n  onCancel: VoidFunction;\n};\n\nexport default function CalendarForm({ event, range, onCancel }: CalendarFormProps) {\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const isCreating = !event;\n\n  const EventSchema = Yup.object().shape({\n    title: Yup.string().max(255).required('Title is required'),\n    description: Yup.string().max(5000)\n  });\n\n  const formik = useFormik({\n    initialValues: getInitialValues(event, range),\n    validationSchema: EventSchema,\n    onSubmit: async (values, { resetForm, setSubmitting }) => {\n      try {\n        const newEvent = {\n          title: values.title,\n          description: values.description,\n          textColor: values.textColor,\n          allDay: values.allDay,\n          start: values.start,\n          end: values.end\n        };\n        if (event.id) {\n          dispatch(updateEvent(event.id, newEvent));\n          enqueueSnackbar('Update event success', { variant: 'success' });\n        } else {\n          dispatch(createEvent(newEvent));\n          enqueueSnackbar('Create event success', { variant: 'success' });\n        }\n        resetForm();\n        onCancel();\n        setSubmitting(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps,\n    setFieldValue\n  } = formik;\n\n  const handleDelete = async () => {\n    if (!event.id) return;\n    try {\n      onCancel();\n      dispatch(deleteEvent(event.id));\n      enqueueSnackbar('Delete event success', { variant: 'success' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const isDateError = isBefore(new Date(values.end), new Date(values.start));\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <DialogContent sx={{ pb: 0, overflowY: 'unset' }}>\n          <TextField\n            fullWidth\n            label=\"Title\"\n            {...getFieldProps('title')}\n            error={Boolean(touched.title && errors.title)}\n            helperText={touched.title && errors.title}\n            sx={{ mb: 3 }}\n          />\n\n          <TextField\n            fullWidth\n            multiline\n            maxRows={4}\n            label=\"Description\"\n            {...getFieldProps('description')}\n            error={Boolean(touched.description && errors.description)}\n            helperText={touched.description && errors.description}\n            sx={{ mb: 3 }}\n          />\n\n          <FormControlLabel\n            control={<Switch checked={values.allDay} {...getFieldProps('allDay')} />}\n            label=\"All day\"\n            sx={{ mb: 3 }}\n          />\n\n          <MobileDateTimePicker\n            label=\"Start date\"\n            value={values.start}\n            inputFormat=\"dd/MM/yyyy hh:mm a\"\n            onChange={(date) => setFieldValue('start', date)}\n            renderInput={(params) => <TextField {...params} fullWidth sx={{ mb: 3 }} />}\n          />\n\n          <MobileDateTimePicker\n            label=\"End date\"\n            value={values.end}\n            inputFormat=\"dd/MM/yyyy hh:mm a\"\n            onChange={(date) => setFieldValue('end', date)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                fullWidth\n                error={Boolean(isDateError)}\n                helperText={isDateError && 'End date must be later than start date'}\n                sx={{ mb: 3 }}\n              />\n            )}\n          />\n\n          <ColorSinglePicker {...getFieldProps('textColor')} colors={COLOR_OPTIONS} />\n        </DialogContent>\n\n        <DialogActions>\n          {!isCreating && (\n            <Tooltip title=\"Delete Event\">\n              <IconButton onClick={handleDelete}>\n                <Icon icon={trash2Fill} width={20} height={20} />\n              </IconButton>\n            </Tooltip>\n          )}\n          <Box sx={{ flexGrow: 1 }} />\n          <Button type=\"button\" variant=\"outlined\" color=\"inherit\" onClick={onCancel}>\n            Cancel\n          </Button>\n          <LoadingButton\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n            loadingIndicator=\"Loading...\"\n          >\n            Add\n          </LoadingButton>\n        </DialogActions>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport roundViewDay from '@iconify/icons-ic/round-view-day';\nimport roundViewWeek from '@iconify/icons-ic/round-view-week';\nimport roundViewAgenda from '@iconify/icons-ic/round-view-agenda';\nimport roundViewModule from '@iconify/icons-ic/round-view-module';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Tooltip, Typography, IconButton, ToggleButton } from '@material-ui/core';\n// utils\nimport { fDate } from '../../../utils/formatTime';\n//\nimport { MButton, MHidden } from '../../@material-extend';\nimport { CalendarView } from '../../../@types/calendar';\n\n// ----------------------------------------------------------------------\n\nconst VIEW_OPTIONS = [\n  { value: 'dayGridMonth', label: 'Month', icon: roundViewModule },\n  { value: 'timeGridWeek', label: 'Week', icon: roundViewWeek },\n  { value: 'timeGridDay', label: 'Day', icon: roundViewDay },\n  { value: 'listWeek', label: 'Agenda', icon: roundViewAgenda }\n] as const;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  padding: theme.spacing(3, 0),\n  [theme.breakpoints.up('sm')]: {\n    flexDirection: 'row',\n    padding: theme.spacing(1.75, 3),\n    justifyContent: 'space-between'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ntype CalendarToolbarProps = {\n  date: Date;\n  view: CalendarView;\n  onToday: VoidFunction;\n  onNextDate: VoidFunction;\n  onPrevDate: VoidFunction;\n  onChangeView: (view: CalendarView) => void;\n};\n\nexport default function CalendarToolbar({\n  date,\n  view,\n  onNextDate,\n  onPrevDate,\n  onToday,\n  onChangeView\n}: CalendarToolbarProps) {\n  return (\n    <RootStyle>\n      <MHidden width=\"smDown\">\n        <Box sx={{ '& > *:not(:last-of-type)': { mr: 1 } }}>\n          {VIEW_OPTIONS.map((viewOption) => (\n            <Tooltip key={viewOption.value} title={viewOption.label}>\n              <ToggleButton\n                value={view}\n                selected={viewOption.value === view}\n                onChange={() => onChangeView(viewOption.value)}\n                sx={{ width: 32, height: 32, padding: 0 }}\n              >\n                <Icon icon={viewOption.icon} width={20} height={20} />\n              </ToggleButton>\n            </Tooltip>\n          ))}\n        </Box>\n      </MHidden>\n\n      <Typography variant=\"h5\" sx={{ my: { xs: 1, sm: 0 } }}>\n        {fDate(date)}\n      </Typography>\n\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <IconButton onClick={onPrevDate}>\n          <Icon icon={arrowIosBackFill} width={18} height={18} />\n        </IconButton>\n\n        <MButton size=\"small\" color=\"error\" variant=\"contained\" onClick={onToday} sx={{ mx: 0.5 }}>\n          Today\n        </MButton>\n\n        <IconButton onClick={onNextDate}>\n          <Icon icon={arrowIosForwardFill} width={18} height={18} />\n        </IconButton>\n      </Box>\n    </RootStyle>\n  );\n}\n","import { experimentalStyled as styled, alpha } from '@material-ui/core/styles';\n// theme\nimport typography from '../../../theme/typography';\n\n// ----------------------------------------------------------------------\n\nconst CalendarStyle = styled('div')(({ theme }) => ({\n  width: 'calc(100% + 2px)',\n  marginLeft: -1,\n  marginBottom: -1,\n  '& .fc': {\n    '--fc-list-event-dot-width': '8px',\n    '--fc-border-color': theme.palette.divider,\n    '--fc-event-border-color': theme.palette.info.light,\n    '--fc-now-indicator-color': theme.palette.error.main,\n    '--fc-today-bg-color': theme.palette.action.selected,\n    '--fc-page-bg-color': theme.palette.background.default,\n    '--fc-neutral-bg-color': theme.palette.background.neutral,\n    '--fc-list-event-hover-bg-color': theme.palette.action.hover,\n    '--fc-highlight-color': alpha(theme.palette.primary.main, 0.08)\n  },\n\n  '& .fc .fc-license-message': { display: 'none' },\n  '& .fc a': { color: theme.palette.text.primary },\n\n  // Table Head\n  '& .fc .fc-col-header ': {\n    boxShadow: `inset 0 -1px 0 ${theme.palette.divider}`,\n    '& th': { borderColor: 'transparent' },\n    '& .fc-col-header-cell-cushion': {\n      ...typography.subtitle2,\n      padding: '13px 0'\n    }\n  },\n\n  // Event\n  '& .fc .fc-event': {\n    borderColor: 'transparent',\n    backgroundColor: 'transparent'\n  },\n  '& .fc .fc-event .fc-event-main': {\n    padding: '2px 4px',\n    borderRadius: 4,\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create('filter'),\n    '&:hover': { filter: 'brightness(0.92)' },\n    '&:before,&:after': {\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      content: \"''\",\n      borderRadius: 4,\n      position: 'absolute',\n      boxSizing: 'border-box'\n    },\n    '&:before': {\n      zIndex: 8,\n      opacity: 0.32,\n      border: 'solid 1px currentColor'\n    },\n    '&:after': {\n      zIndex: 7,\n      opacity: 0.24,\n      backgroundColor: 'currentColor'\n    }\n  },\n  '& .fc .fc-event .fc-event-main-frame': {\n    fontSize: 13,\n    lineHeight: '20px',\n    filter: 'brightness(0.24)'\n  },\n  '& .fc .fc-daygrid-event .fc-event-title': {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n  },\n  '& .fc .fc-event .fc-event-time': {\n    padding: 0,\n    overflow: 'unset',\n    fontWeight: theme.typography.fontWeightBold\n  },\n\n  // Popover\n  '& .fc .fc-popover': {\n    border: 0,\n    overflow: 'hidden',\n    boxShadow: theme.customShadows.z20,\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper\n  },\n  '& .fc .fc-popover-header': {\n    ...typography.subtitle2,\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.grey[500_12],\n    borderBottom: `solid 1px ${theme.palette.divider}`\n  },\n  '& .fc .fc-popover-close': {\n    opacity: 0.48,\n    transition: theme.transitions.create('opacity'),\n    '&:hover': { opacity: 1 }\n  },\n  '& .fc .fc-more-popover .fc-popover-body': {\n    padding: theme.spacing(1.5)\n  },\n  '& .fc .fc-popover-body': {\n    '& .fc-daygrid-event.fc-event-start, & .fc-daygrid-event.fc-event-end': {\n      margin: '2px 0'\n    }\n  },\n\n  // Month View\n  '& .fc .fc-day-other .fc-daygrid-day-top': {\n    opacity: 1,\n    '& .fc-daygrid-day-number': {\n      color: theme.palette.text.disabled\n    }\n  },\n  '& .fc .fc-daygrid-day-number': {\n    ...typography.body2,\n    padding: theme.spacing(1, 1, 0)\n  },\n  '& .fc .fc-daygrid-event': {\n    marginTop: 4\n  },\n  '& .fc .fc-daygrid-event.fc-event-start, & .fc .fc-daygrid-event.fc-event-end': {\n    marginLeft: 4,\n    marginRight: 4\n  },\n  '& .fc .fc-daygrid-more-link': {\n    ...typography.caption,\n    color: theme.palette.text.secondary\n  },\n\n  // Week & Day View\n  '& .fc .fc-timegrid-axis-cushion': {\n    ...typography.body2,\n    color: theme.palette.text.secondary\n  },\n  '& .fc .fc-timegrid-slot-label-cushion': {\n    ...typography.body2\n  },\n\n  // Agenda View\n  '& .fc-direction-ltr .fc-list-day-text, .fc-direction-rtl .fc-list-day-side-text, .fc-direction-ltr .fc-list-day-side-text, .fc-direction-rtl .fc-list-day-text': {\n    ...typography.subtitle2\n  },\n  '& .fc .fc-list-event': {\n    ...typography.body2,\n    '& .fc-list-event-time': {\n      color: theme.palette.text.secondary\n    }\n  },\n  '& .fc .fc-list-table': {\n    '& th, td': {\n      borderColor: 'transparent'\n    }\n  }\n}));\n\nexport default CalendarStyle;\n","import FullCalendar, { DateSelectArg, EventClickArg, EventDropArg } from '@fullcalendar/react'; // => request placed at the top\nimport listPlugin from '@fullcalendar/list';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport interactionPlugin, { EventResizeDoneArg } from '@fullcalendar/interaction';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { useState, useRef, useEffect } from 'react';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport { Card, Button, Container, DialogTitle, useMediaQuery } from '@material-ui/core';\n// redux\nimport { RootState, useDispatch, useSelector } from '../../redux/store';\nimport {\n  getEvents,\n  openModal,\n  closeModal,\n  updateEvent,\n  selectEvent,\n  selectRange\n} from '../../redux/slices/calendar';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport { DialogAnimate } from '../../components/animate';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { CalendarForm, CalendarStyle, CalendarToolbar } from '../../components/_dashboard/calendar';\n\nimport { CalendarView } from '../../@types/calendar';\n\n// ----------------------------------------------------------------------\n\nconst selectedEventSelector = (state: RootState) => {\n  const { events, selectedEventId } = state.calendar;\n  if (selectedEventId) {\n    return events.find((_event) => _event.id === selectedEventId);\n  }\n  return null;\n};\n\nexport default function Calendar() {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const calendarRef = useRef<FullCalendar>(null);\n  const { enqueueSnackbar } = useSnackbar();\n  const [date, setDate] = useState(new Date());\n  const [view, setView] = useState<CalendarView>(isMobile ? 'listWeek' : 'dayGridMonth');\n  const selectedEvent = useSelector(selectedEventSelector);\n  const { events, isOpenModal, selectedRange } = useSelector((state: RootState) => state.calendar);\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = isMobile ? 'listWeek' : 'dayGridMonth';\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [isMobile]);\n\n  const handleClickToday = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleChangeView = (newView: CalendarView) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleClickDatePrev = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleClickDateNext = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleSelectRange = (arg: DateSelectArg) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.unselect();\n    }\n    dispatch(selectRange(arg.start, arg.end));\n  };\n\n  const handleSelectEvent = (arg: EventClickArg) => {\n    dispatch(selectEvent(arg.event.id));\n  };\n\n  const handleResizeEvent = async ({ event }: EventResizeDoneArg) => {\n    try {\n      dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end\n        })\n      );\n      enqueueSnackbar('Update event success', { variant: 'success' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDropEvent = async ({ event }: EventDropArg) => {\n    try {\n      dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end\n        })\n      );\n      enqueueSnackbar('Update event success', {\n        variant: 'success'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleAddEvent = () => {\n    dispatch(openModal());\n  };\n\n  const handleCloseModal = () => {\n    dispatch(closeModal());\n  };\n\n  return (\n    <Page title=\"Calendar | Minimal-UI\">\n      <Container maxWidth=\"xl\">\n        <HeaderBreadcrumbs\n          heading=\"Calendar\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Calendar' }]}\n          moreLink=\"https://fullcalendar.io/docs/react\"\n          action={\n            <Button\n              variant=\"contained\"\n              startIcon={<Icon icon={plusFill} width={20} height={20} />}\n              onClick={handleAddEvent}\n            >\n              New Event\n            </Button>\n          }\n        />\n\n        <Card>\n          <CalendarStyle>\n            <CalendarToolbar\n              date={date}\n              view={view}\n              onNextDate={handleClickDateNext}\n              onPrevDate={handleClickDatePrev}\n              onToday={handleClickToday}\n              onChangeView={handleChangeView}\n            />\n            <FullCalendar\n              weekends\n              editable\n              droppable\n              selectable\n              events={events}\n              ref={calendarRef}\n              rerenderDelay={10}\n              initialDate={date}\n              initialView={view}\n              dayMaxEventRows={3}\n              eventDisplay=\"block\"\n              headerToolbar={false}\n              allDayMaintainDuration\n              eventResizableFromStart\n              select={handleSelectRange}\n              eventDrop={handleDropEvent}\n              eventClick={handleSelectEvent}\n              eventResize={handleResizeEvent}\n              height={isMobile ? 'auto' : 720}\n              plugins={[\n                listPlugin,\n                dayGridPlugin,\n                timelinePlugin,\n                timeGridPlugin,\n                interactionPlugin\n              ]}\n            />\n          </CalendarStyle>\n        </Card>\n\n        <DialogAnimate open={isOpenModal} onClose={handleCloseModal}>\n          <DialogTitle>{selectedEvent ? 'Edit Event' : 'Add Event'}</DialogTitle>\n\n          <CalendarForm\n            event={selectedEvent || {}}\n            range={selectedRange}\n            onCancel={handleCloseModal}\n          />\n        </DialogAnimate>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}