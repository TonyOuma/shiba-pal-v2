{"version":3,"sources":["components/HeaderBreadcrumbs.tsx","utils/formatNumber.ts","components/SearchNotFound.tsx","components/_dashboard/e-commerce/product-list/ProductListHead.tsx","components/_dashboard/e-commerce/product-list/ProductListToolbar.tsx","pages/dashboard/EcommerceProductList.tsx"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData","SearchNotFound","searchQuery","align","ProductListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","e","headCell","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","onClick","label","Box","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","theme","spacing","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","ProductListToolbar","filterName","onFilterName","isLight","useTheme","mode","color","bgcolor","Typography","component","value","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","title","IconButton","trash2Fill","roundFilterList","TABLE_HEAD","ThumbImgStyle","objectFit","margin","borderRadius","shape","borderRadiusSm","descendingComparator","a","b","EcommerceProductList","dispatch","useDispatch","products","useSelector","state","product","useState","page","setPage","setOrder","selected","setSelected","setFilterName","rowsPerPage","setRowsPerPage","setOrderBy","useEffect","getProducts","emptyRows","Math","max","length","filteredProducts","array","comparator","query","stabilizedThis","el","index","sort","filter","_product","name","toLowerCase","indexOf","applySortFilter","getComparator","isProductNotFound","Page","Container","PATH_DASHBOARD","root","eCommerce","Card","Scrollbar","TableContainer","minWidth","Table","property","n","TableBody","slice","row","cover","price","createdAt","inventoryType","isItemSelected","hover","tabIndex","role","aria-checked","selectedIndex","newSelected","concat","handleClick","scope","py","alt","src","style","fDate","Label","sentenceCase","moreVerticalFill","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","event","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/80.a36fd93f.chunk.js","sourcesContent":["import { ReactNode } from 'react';\nimport { isString } from 'lodash';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\nimport { MBreadcrumbsProps } from './@material-extend/MBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface HeaderBreadcrumbsProps extends MBreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: HeaderBreadcrumbsProps) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number: string | number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number: number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number: string | number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number: string | number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number: string | number) {\n  return numeral(number).format('0.0 b');\n}\n","import { Paper, PaperProps, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\ninterface SearchNotFoundProps extends PaperProps {\n  searchQuery?: string;\n}\n\nexport default function SearchNotFound({ searchQuery = '', ...other }: SearchNotFoundProps) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\ntype ProductListHeadProps = {\n  order: 'asc' | 'desc';\n  orderBy: string;\n  rowCount: number;\n  headLabel: any[];\n  numSelected: number;\n  onRequestSort: (property: string) => void;\n  onSelectAllClick: (checked: boolean) => void;\n};\n\nexport default function ProductListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}: ProductListHeadProps) {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={(e) => onSelectAllClick(e.target.checked)}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={() => onRequestSort(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  InputAdornment,\n  OutlinedInput\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\ntype ProductListToolbarProps = {\n  numSelected: number;\n  filterName: string;\n  onFilterName: (value: string) => void;\n};\n\nexport default function ProductListToolbar({\n  numSelected,\n  filterName,\n  onFilterName\n}: ProductListToolbarProps) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={(e) => onFilterName(e.target.value)}\n          placeholder=\"Search product...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  TableRow,\n  Checkbox,\n  TableBody,\n  TableCell,\n  Container,\n  IconButton,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getProducts } from '../../redux/slices/product';\n// utils\nimport { fDate } from '../../utils/formatTime';\nimport { fCurrency } from '../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// @types\nimport { Product, ProductState } from '../../@types/products';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport {\n  ProductListHead,\n  ProductListToolbar\n} from '../../components/_dashboard/e-commerce/product-list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Product', alignRight: false },\n  { id: 'createdAt', label: 'Create at', alignRight: false },\n  { id: 'inventoryType', label: 'Status', alignRight: false },\n  { id: 'price', label: 'Price', alignRight: true },\n  { id: '' }\n];\n\nconst ThumbImgStyle = styled('img')(({ theme }) => ({\n  width: 64,\n  height: 64,\n  objectFit: 'cover',\n  margin: theme.spacing(0, 2),\n  borderRadius: theme.shape.borderRadiusSm\n}));\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a: Anonymous, b: Anonymous, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Anonymous = Record<string | number, string>;\n\nfunction getComparator(order: string, orderBy: string) {\n  return order === 'desc'\n    ? (a: Anonymous, b: Anonymous) => descendingComparator(a, b, orderBy)\n    : (a: Anonymous, b: Anonymous) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array: Product[], comparator: (a: any, b: any) => number, query: string) {\n  const stabilizedThis = array.map((el, index) => [el, index] as const);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    return filter(\n      array,\n      (_product) => _product.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\n// ----------------------------------------------------------------------\n\nexport default function EcommerceProductList() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { products } = useSelector((state: { product: ProductState }) => state.product);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\n  const [selected, setSelected] = useState<string[]>([]);\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [orderBy, setOrderBy] = useState('createdAt');\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  const handleRequestSort = (property: string) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (checked: boolean) => {\n    if (checked) {\n      const selected = products.map((n) => n.name);\n      setSelected(selected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (filterName: string) => {\n    setFilterName(filterName);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - products.length) : 0;\n\n  const filteredProducts = applySortFilter(products, getComparator(order, orderBy), filterName);\n\n  const isProductNotFound = filteredProducts.length === 0;\n\n  return (\n    <Page title=\"Ecommerce: Product List | Minimal-UI\">\n      <Container>\n        <HeaderBreadcrumbs\n          heading=\"Product List\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            {\n              name: 'E-Commerce',\n              href: PATH_DASHBOARD.eCommerce.root\n            },\n            { name: 'Product List' }\n          ]}\n        />\n\n        <Card>\n          <ProductListToolbar\n            numSelected={selected.length}\n            filterName={filterName}\n            onFilterName={handleFilterByName}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <ProductListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={products.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredProducts\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      const { id, name, cover, price, createdAt, inventoryType } = row;\n\n                      const isItemSelected = selected.indexOf(name) !== -1;\n\n                      return (\n                        <TableRow\n                          hover\n                          key={id}\n                          tabIndex={-1}\n                          role=\"checkbox\"\n                          selected={isItemSelected}\n                          aria-checked={isItemSelected}\n                          onClick={() => handleClick(name)}\n                        >\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox checked={isItemSelected} />\n                          </TableCell>\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Box\n                              sx={{\n                                py: 2,\n                                display: 'flex',\n                                alignItems: 'center'\n                              }}\n                            >\n                              <ThumbImgStyle alt={name} src={cover} />\n                              <Typography variant=\"subtitle2\" noWrap>\n                                {name}\n                              </Typography>\n                            </Box>\n                          </TableCell>\n                          <TableCell style={{ minWidth: 160 }}>{fDate(createdAt)}</TableCell>\n                          <TableCell style={{ minWidth: 160 }}>\n                            <Label\n                              variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                              color={\n                                (inventoryType === 'out_of_stock' && 'error') ||\n                                (inventoryType === 'low_stock' && 'warning') ||\n                                'success'\n                              }\n                            >\n                              {inventoryType ? sentenceCase(inventoryType) : ''}\n                            </Label>\n                          </TableCell>\n                          <TableCell align=\"right\">{fCurrency(price)}</TableCell>\n                          <TableCell align=\"right\">\n                            <IconButton>\n                              <Icon icon={moreVerticalFill} width={20} height={20} />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isProductNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6}>\n                        <Box sx={{ py: 3 }}>\n                          <SearchNotFound searchQuery={filterName} />\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={products.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={(event, value) => setPage(value)}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}