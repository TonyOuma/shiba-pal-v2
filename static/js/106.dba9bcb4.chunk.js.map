{"version":3,"sources":["components/HeaderBreadcrumbs.tsx","pages/components-overview/extra/MultiLanguage.tsx"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","RootStyle","styled","Page","theme","paddingTop","spacing","paddingBottom","MultiLanguage","useLocales","allLang","currentLang","translate","onChangeLang","title","pt","pb","bgcolor","palette","mode","maxWidth","name","PATH_PAGE","components","p","row","value","onChange","event","lang","label","control","my","component","alt","src","icon","mr"],"mappings":"0NAgBe,SAASA,EAAT,GAOa,IAN1BC,EAMyB,EANzBA,MACAC,EAKyB,EALzBA,OACAC,EAIyB,EAJzBA,QAIyB,IAHzBC,gBAGyB,MAHR,GAGQ,EAFzBC,EAEyB,EAFzBA,GACGC,EACsB,4DACzB,OACE,eAAC,IAAD,CAAKD,GAAE,aAAIE,GAAI,GAAMF,GAArB,UACE,eAAC,IAAD,CAAKA,GAAI,CAAEG,QAAS,OAAQC,WAAY,UAAxC,UACE,eAAC,IAAD,CAAKJ,GAAI,CAAEK,SAAU,GAArB,UACE,cAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SACGT,IAEH,cAAC,IAAD,aAAcF,MAAOA,GAAWK,OAGjCJ,GAAU,cAAC,IAAD,CAAKG,GAAI,CAAEQ,WAAY,GAAvB,SAA6BX,OAG1C,cAAC,IAAD,CAAKG,GAAI,CAAES,GAAI,GAAf,SACGC,mBAASX,GACR,cAAC,IAAD,CAAMY,KAAMZ,EAAUa,OAAO,SAASN,QAAQ,QAA9C,SACGP,IAGHA,EAASc,KAAI,SAACF,GAAD,OACX,cAAC,IAAD,CACEG,QAAM,EAENH,KAAMA,EACNL,QAAQ,QACRM,OAAO,SACPZ,GAAI,CAAEG,QAAS,SANjB,SAQGQ,GANIA,a,kCC9CnB,0KAqBMI,EAAYC,YAAOC,IAAPD,EAAa,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC7CC,WAAYD,EAAME,QAAQ,IAC1BC,cAAeH,EAAME,QAAQ,QAGhB,SAASE,IACtB,MAA0DC,cAAlDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,aAEzC,OACE,eAACZ,EAAD,CAAWa,MAAM,0CAAjB,UACE,cAAC,IAAD,CACE5B,GAAI,CACF6B,GAAI,EACJC,GAAI,EACJ5B,GAAI,GACJ6B,QAAS,SAACb,GAAD,MAAmC,UAAvBA,EAAMc,QAAQC,KAAmB,WAAa,aALvE,SAQE,cAAC,IAAD,CAAWC,SAAS,KAApB,SACE,cAAC,IAAD,CACEpC,QAAQ,iBACRF,MAAO,CAAC,CAAEuC,KAAM,aAAcxB,KAAMyB,IAAUC,YAAc,CAAEF,KAAM,mBACpEpC,SAAS,kCAKf,cAAC,IAAD,CAAWmC,SAAS,KAApB,SACE,eAAC,IAAD,CAAMlC,GAAI,CAAEsC,EAAG,GAAf,UACE,cAAC,IAAD,CACEC,KAAG,EACHC,MAAOf,EAAYe,MACnBC,SAAU,SAACC,GAAD,OAAWf,EAAae,EAAM9B,OAAO4B,QAHjD,SAKGhB,EAAQX,KAAI,SAAC8B,GAAD,OACX,cAAC,IAAD,CAEEH,MAAOG,EAAKH,MACZI,MAAOD,EAAKC,MACZC,QAAS,cAAC,IAAD,KAHJF,EAAKC,YAQhB,eAAC,IAAD,CAAK5C,GAAI,CAAE8C,GAAI,EAAG3C,QAAS,OAAQC,WAAY,UAA/C,UACE,cAAC,IAAD,CAAK2C,UAAU,MAAMC,IAAKvB,EAAYmB,MAAOK,IAAKxB,EAAYyB,KAAMlD,GAAI,CAAEmD,GAAI,KAC9E,cAAC,IAAD,CAAY7C,QAAQ,KAApB,SAA0BoB,EAAU,mBAEtC,cAAC,IAAD,CAAYpB,QAAQ,QAApB,SAA6BoB,EAAU","file":"static/js/106.dba9bcb4.chunk.js","sourcesContent":["import { ReactNode } from 'react';\nimport { isString } from 'lodash';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\nimport { MBreadcrumbsProps } from './@material-extend/MBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface HeaderBreadcrumbsProps extends MBreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: HeaderBreadcrumbsProps) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  Card,\n  Radio,\n  Container,\n  Typography,\n  RadioGroup,\n  FormControlLabel\n} from '@material-ui/core';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// hooks\nimport useLocales from '../../../hooks/useLocales';\n// components\nimport Page from '../../../components/Page';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15)\n}));\n\nexport default function MultiLanguage() {\n  const { allLang, currentLang, translate, onChangeLang } = useLocales();\n\n  return (\n    <RootStyle title=\"Components: Multi Language | Minimal-UI\">\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <HeaderBreadcrumbs\n            heading=\"Multi Language\"\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Multi Language' }]}\n            moreLink=\"https://react.i18next.com\"\n          />\n        </Container>\n      </Box>\n\n      <Container maxWidth=\"lg\">\n        <Card sx={{ p: 3 }}>\n          <RadioGroup\n            row\n            value={currentLang.value}\n            onChange={(event) => onChangeLang(event.target.value)}\n          >\n            {allLang.map((lang) => (\n              <FormControlLabel\n                key={lang.label}\n                value={lang.value}\n                label={lang.label}\n                control={<Radio />}\n              />\n            ))}\n          </RadioGroup>\n\n          <Box sx={{ my: 3, display: 'flex', alignItems: 'center' }}>\n            <Box component=\"img\" alt={currentLang.label} src={currentLang.icon} sx={{ mr: 1 }} />\n            <Typography variant=\"h2\">{translate('demo.title')}</Typography>\n          </Box>\n          <Typography variant=\"body1\">{translate('demo.introduction')}</Typography>\n        </Card>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}